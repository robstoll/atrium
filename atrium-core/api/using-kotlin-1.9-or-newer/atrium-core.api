public final class ch/tutteli/atrium/CoreKt {
	public static final fun _coreAppend (Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public static final fun _coreAppend (Lch/tutteli/atrium/creating/ExpectGrouping;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/ExpectGrouping;
	public static final fun get_core (Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/creating/ProofContainer;
	public static final fun get_core (Lch/tutteli/atrium/creating/ExpectGrouping;)Lch/tutteli/atrium/creating/ProofContainer;
}

public abstract interface class ch/tutteli/atrium/assertions/Assertion : ch/tutteli/atrium/creating/proofs/Proof {
}

public abstract interface class ch/tutteli/atrium/assertions/AssertionGroup : ch/tutteli/atrium/assertions/Assertion, ch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation {
	public abstract fun getAssertions ()Ljava/util/List;
	public abstract fun getChildren ()Ljava/util/List;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public abstract fun getRepresentation ()Ljava/lang/Object;
	public abstract fun getType ()Lch/tutteli/atrium/assertions/AssertionGroupType;
	public abstract fun holds ()Z
}

public final class ch/tutteli/atrium/assertions/AssertionGroup$DefaultImpls {
	public static fun getAssertions (Lch/tutteli/atrium/assertions/AssertionGroup;)Ljava/util/List;
	public static fun getChildren (Lch/tutteli/atrium/assertions/AssertionGroup;)Ljava/util/List;
	public static fun getProofs (Lch/tutteli/atrium/assertions/AssertionGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/assertions/AssertionGroup;)Z
}

public abstract interface class ch/tutteli/atrium/assertions/AssertionGroupType : ch/tutteli/atrium/assertions/BulletPointIdentifier {
}

public abstract interface class ch/tutteli/atrium/assertions/BulletPointIdentifier {
}

public final class ch/tutteli/atrium/assertions/DefaultExplanatoryAssertionGroupType : ch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/DefaultExplanatoryAssertionGroupType;
}

public final class ch/tutteli/atrium/assertions/DefaultFeatureAssertionGroupType : ch/tutteli/atrium/assertions/FeatureAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/DefaultFeatureAssertionGroupType;
}

public final class ch/tutteli/atrium/assertions/DefaultGroupingAssertionGroupType : ch/tutteli/atrium/assertions/GroupingAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/DefaultGroupingAssertionGroupType;
}

public final class ch/tutteli/atrium/assertions/DefaultListAssertionGroupType : ch/tutteli/atrium/assertions/ListAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/DefaultListAssertionGroupType;
}

public final class ch/tutteli/atrium/assertions/DefaultSummaryAssertionGroupType : ch/tutteli/atrium/assertions/SummaryAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/DefaultSummaryAssertionGroupType;
}

public abstract interface class ch/tutteli/atrium/assertions/DescriptiveAssertion : ch/tutteli/atrium/assertions/Assertion, ch/tutteli/atrium/reporting/reportables/ReportableWithDesignation {
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public abstract fun getRepresentation ()Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/assertions/DoNotFilterAssertionGroupType : ch/tutteli/atrium/assertions/AssertionGroupType {
}

public abstract interface annotation class ch/tutteli/atrium/assertions/ExperimentalExpectationApi : java/lang/annotation/Annotation {
	public abstract fun reason ()Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/assertions/ExplanatoryAssertion : ch/tutteli/atrium/assertions/Assertion {
	public abstract fun getExplanation ()Ljava/lang/Object;
	public abstract fun holds ()Z
}

public final class ch/tutteli/atrium/assertions/ExplanatoryAssertion$DefaultImpls {
	public static fun holds (Lch/tutteli/atrium/assertions/ExplanatoryAssertion;)Z
}

public abstract interface class ch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType : ch/tutteli/atrium/assertions/DoNotFilterAssertionGroupType {
}

public abstract interface class ch/tutteli/atrium/assertions/FeatureAssertionGroupType : ch/tutteli/atrium/assertions/AssertionGroupType {
}

public abstract interface class ch/tutteli/atrium/assertions/GroupingAssertionGroupType : ch/tutteli/atrium/assertions/AssertionGroupType {
}

public final class ch/tutteli/atrium/assertions/HintAssertionGroupType : ch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/HintAssertionGroupType;
}

public final class ch/tutteli/atrium/assertions/InformationAssertionGroupType : ch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType {
	public fun <init> (Z)V
	public final fun component1 ()Z
	public final fun copy (Z)Lch/tutteli/atrium/assertions/InformationAssertionGroupType;
	public static synthetic fun copy$default (Lch/tutteli/atrium/assertions/InformationAssertionGroupType;ZILjava/lang/Object;)Lch/tutteli/atrium/assertions/InformationAssertionGroupType;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getWithIndent ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/assertions/InvisibleAssertionGroupType : ch/tutteli/atrium/assertions/AssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/InvisibleAssertionGroupType;
}

public abstract interface class ch/tutteli/atrium/assertions/ListAssertionGroupType : ch/tutteli/atrium/assertions/AssertionGroupType {
}

public final class ch/tutteli/atrium/assertions/PrefixFailingSummaryAssertion : ch/tutteli/atrium/assertions/BulletPointIdentifier {
}

public final class ch/tutteli/atrium/assertions/PrefixFeatureAssertionGroupHeader : ch/tutteli/atrium/assertions/BulletPointIdentifier {
}

public final class ch/tutteli/atrium/assertions/PrefixSuccessfulSummaryAssertion : ch/tutteli/atrium/assertions/BulletPointIdentifier {
}

public abstract interface class ch/tutteli/atrium/assertions/RepresentationOnlyAssertion : ch/tutteli/atrium/assertions/Assertion {
	public abstract fun getRepresentation ()Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/RootAssertionGroupType : ch/tutteli/atrium/assertions/AssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/RootAssertionGroupType;
}

public abstract interface class ch/tutteli/atrium/assertions/SummaryAssertionGroupType : ch/tutteli/atrium/assertions/DoNotFilterAssertionGroupType {
}

public final class ch/tutteli/atrium/assertions/WarningAssertionGroupType : ch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType {
	public static final field INSTANCE Lch/tutteli/atrium/assertions/WarningAssertionGroupType;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/AssertionBuilder {
	public abstract fun createDescriptive (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;
	public abstract fun createDescriptive (Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;
	public abstract fun customType (Lch/tutteli/atrium/assertions/AssertionGroupType;)Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
	public abstract fun getDescriptive ()Lch/tutteli/atrium/assertions/builders/Descriptive$HoldsOption;
	public abstract fun getExplanatory ()Lch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption;
	public abstract fun getExplanatoryGroup ()Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$GroupTypeOption;
	public abstract fun getFeature ()Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
	public abstract fun getList ()Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
	public abstract fun getRepresentationOnly ()Lch/tutteli/atrium/assertions/builders/RepresentationOnly$HoldsStep;
	public abstract fun getSummary ()Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionBuilder$DefaultImpls {
	public static fun createDescriptive (Lch/tutteli/atrium/assertions/builders/AssertionBuilder;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;
	public static fun createDescriptive (Lch/tutteli/atrium/assertions/builders/AssertionBuilder;Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/DescriptiveAssertion;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public abstract fun build ()Lch/tutteli/atrium/assertions/Assertion;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionBuilderKt {
	public static final fun getAssertionBuilder ()Lch/tutteli/atrium/assertions/builders/AssertionBuilder;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption$Companion;
	public abstract fun getGroupType ()Lch/tutteli/atrium/assertions/AssertionGroupType;
	public abstract fun withDescription (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/Object;
	public abstract fun withDescription (Ljava/lang/String;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;Lkotlin/jvm/functions/Function3;)Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption$DefaultImpls {
	public static fun withDescription (Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndEmptyRepresentationOption;Ljava/lang/String;)Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption$Companion;
	public abstract fun getGroupType ()Lch/tutteli/atrium/assertions/AssertionGroupType;
	public abstract fun withDescriptionAndEmptyRepresentation (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/Object;
	public abstract fun withDescriptionAndEmptyRepresentation (Ljava/lang/String;)Ljava/lang/Object;
	public abstract fun withDescriptionAndRepresentation (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun withDescriptionAndRepresentation (Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun withDescriptionAndRepresentation (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun withDescriptionAndRepresentation (Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;Lkotlin/jvm/functions/Function3;)Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption$DefaultImpls {
	public static fun withDescriptionAndEmptyRepresentation (Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/Object;
	public static fun withDescriptionAndEmptyRepresentation (Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;Ljava/lang/String;)Ljava/lang/Object;
	public static fun withDescriptionAndRepresentation (Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public static fun withDescriptionAndRepresentation (Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
	public static fun withDescriptionAndRepresentation (Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;Ljava/lang/String;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/AssertionsOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/AssertionsOption$Companion;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public abstract fun getGroupType ()Lch/tutteli/atrium/assertions/AssertionGroupType;
	public abstract fun getRepresentation ()Ljava/lang/Object;
	public abstract fun withAssertion (Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Object;
	public abstract fun withAssertions (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Object;
	public abstract fun withAssertions (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Object;
	public abstract fun withAssertions (Ljava/util/List;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionsOption$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function4;)Lch/tutteli/atrium/assertions/builders/AssertionsOption;
	public final fun factoryWithDefaultFinalStep ()Lkotlin/jvm/functions/Function3;
	public final fun withDefaultFinalStepAndEmptyDescriptionAndRepresentation (Lch/tutteli/atrium/assertions/AssertionGroupType;)Lch/tutteli/atrium/assertions/builders/AssertionsOption;
	public final fun withEmptyDescriptionAndRepresentation (Lch/tutteli/atrium/assertions/AssertionGroupType;Lkotlin/jvm/functions/Function4;)Lch/tutteli/atrium/assertions/builders/AssertionsOption;
}

public final class ch/tutteli/atrium/assertions/builders/AssertionsOption$DefaultImpls {
	public static fun withAssertion (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Object;
	public static fun withAssertions (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Object;
	public static fun withAssertions (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/BasicAssertionGroupFinalStep : ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/BasicAssertionGroupFinalStep$Companion;
	public abstract fun getAssertions ()Ljava/util/List;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public abstract fun getGroupType ()Lch/tutteli/atrium/assertions/AssertionGroupType;
	public abstract fun getRepresentation ()Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/BasicAssertionGroupFinalStep$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/util/List;)Lch/tutteli/atrium/assertions/builders/BasicAssertionGroupFinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Descriptive {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption$Companion;
	public abstract fun getTest ()Lkotlin/jvm/functions/Function0;
	public abstract fun withDescriptionAndRepresentation (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Ljava/lang/Object;
	public abstract fun withDescriptionAndRepresentation (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function3;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
}

public final class ch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption$DefaultImpls {
	public static fun withDescriptionAndRepresentation (Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Descriptive$FinalStep : ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/Descriptive$FinalStep$Companion;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public abstract fun getRepresentation ()Ljava/lang/Object;
	public abstract fun getTest ()Lkotlin/jvm/functions/Function0;
}

public final class ch/tutteli/atrium/assertions/builders/Descriptive$FinalStep$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/Descriptive$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Descriptive$HoldsOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/Descriptive$HoldsOption$Companion;
	public abstract fun getFailing ()Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun getHolding ()Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun withTest (Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun withTest (Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
}

public final class ch/tutteli/atrium/assertions/builders/Descriptive$HoldsOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/Descriptive$HoldsOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectAbsentOption : ch/tutteli/atrium/assertions/builders/SubjectBasedOption$AbsentOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectAbsentOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectAbsentOption$Companion {
	public final fun create (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectAbsentOption;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectAbsentOption$DefaultImpls {
	public static fun ifAbsent (Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectAbsentOption;Lkotlin/jvm/functions/Function0;)Lkotlin/Pair;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectDefinedOption : ch/tutteli/atrium/assertions/builders/SubjectBasedOption$DefinedOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectDefinedOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectDefinedOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FailureHintSubjectDefinedOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FinalStep : ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FinalStep$Companion;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public abstract fun getFailureHintFactory ()Lkotlin/jvm/functions/Function0;
	public abstract fun getRepresentation ()Ljava/lang/Object;
	public abstract fun getShowHint ()Lkotlin/jvm/functions/Function0;
	public abstract fun getTest ()Lkotlin/jvm/functions/Function0;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FinalStep$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption$Companion;
	public abstract fun getShowForAnyFailure ()Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun showBasedOnDefinedSubjectOnlyIf (Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun showBasedOnSubjectOnlyIf (Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun showOnlyIf (Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public abstract fun showOnlyIfSubjectDefined (Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption$DefaultImpls {
	public static fun showBasedOnDefinedSubjectOnlyIf (Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption;Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public static fun showBasedOnSubjectOnlyIf (Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption;Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public static fun showOnlyIfSubjectDefined (Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption;Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectAbsentOption : ch/tutteli/atrium/assertions/builders/SubjectBasedOption$AbsentOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectAbsentOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectAbsentOption$Companion {
	public final fun create (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectAbsentOption;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectAbsentOption$DefaultImpls {
	public static fun ifAbsent (Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectAbsentOption;Lkotlin/jvm/functions/Function0;)Lkotlin/Pair;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectDefinedOption : ch/tutteli/atrium/assertions/builders/SubjectBasedOption$DefinedOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectDefinedOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectDefinedOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowSubjectDefinedOption;
}

public final class ch/tutteli/atrium/assertions/builders/DescriptiveWithFailureHintKt {
	public static final fun createShouldNotBeShownToUserWarning ()Lch/tutteli/atrium/assertions/Assertion;
	public static final fun withHelpOnFailure (Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption;
	public static final fun withHelpOnFailureBasedOnDefinedSubject (Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public static synthetic fun withHelpOnFailureBasedOnDefinedSubject$default (Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;
	public static final fun withHelpOnFailureBasedOnSubject (Lch/tutteli/atrium/assertions/builders/Descriptive$DescriptionOption;Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/DescriptiveAssertionWithFailureHint$ShowOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Explanatory {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption$Companion;
	public abstract fun withExplanation (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;[Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep;
	public abstract fun withExplanation (Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep;
	public abstract fun withExplanation (Ljava/lang/String;)Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep;
}

public final class ch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption;
}

public final class ch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption$DefaultImpls {
	public static fun withExplanation (Lch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;[Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep;
	public static fun withExplanation (Lch/tutteli/atrium/assertions/builders/Explanatory$ExplanationOption;Ljava/lang/String;)Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/Explanatory$FinalStep : ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep$Companion;
	public abstract fun getExplanation ()Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/Explanatory$FinalStep$Companion {
	public final fun create (Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/Explanatory$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/ExplanatoryGroup {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep : ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep$Companion;
	public abstract fun getExplanatoryAssertions ()Ljava/util/List;
	public abstract fun getFailing ()Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
	public abstract fun getGroupType ()Lch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType;
}

public final class ch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType;Ljava/util/List;Z)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
	public static synthetic fun create$default (Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep$Companion;Lch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType;Ljava/util/List;ZILjava/lang/Object;)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
}

public final class ch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep$DefaultImpls {
	public static fun getFailing (Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/ExplanatoryGroup$GroupTypeOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$GroupTypeOption$Companion;
	public abstract fun getWithDefaultType ()Lch/tutteli/atrium/assertions/builders/AssertionsOption;
	public abstract fun getWithHintType ()Lch/tutteli/atrium/assertions/builders/AssertionsOption;
	public abstract fun getWithWarningType ()Lch/tutteli/atrium/assertions/builders/AssertionsOption;
	public abstract fun withInformationType (Z)Lch/tutteli/atrium/assertions/builders/AssertionsOption;
	public abstract fun withType (Lch/tutteli/atrium/assertions/ExplanatoryAssertionGroupType;)Lch/tutteli/atrium/assertions/builders/AssertionsOption;
}

public final class ch/tutteli/atrium/assertions/builders/ExplanatoryGroup$GroupTypeOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$GroupTypeOption;
}

public final class ch/tutteli/atrium/assertions/builders/ExplanatoryGroupKt {
	public static final fun withExplanatoryAssertion (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Lch/tutteli/atrium/reporting/translating/Translatable;)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
	public static final fun withExplanatoryAssertion (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;[Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
	public static final fun withExplanatoryAssertion (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
	public static final fun withExplanatoryAssertion (Lch/tutteli/atrium/assertions/builders/AssertionsOption;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/ExplanatoryGroup$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimGroup {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$FinalStep : ch/tutteli/atrium/assertions/builders/BasicAssertionGroupFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$FinalStep$Companion;
	public abstract fun getHolds ()Z
}

public final class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$FinalStep$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/util/List;Z)Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption : ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$GroupTypeOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption;
}

public final class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption$DefaultImpls {
	public static fun getWithFeatureType (Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
	public static fun getWithListType (Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$HoldsOption : ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$HoldsOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/FixedClaimGroup$HoldsOption$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;)Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$HoldsOption;
}

public final class ch/tutteli/atrium/assertions/builders/FixedClaimGroupKt {
	public static final fun getFixedClaimGroup (Lch/tutteli/atrium/assertions/builders/AssertionBuilder;)Lch/tutteli/atrium/assertions/builders/FixedClaimGroup$GroupTypeOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$GroupTypeOption {
	public abstract fun getWithFeatureType ()Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
	public abstract fun getWithListType ()Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
	public abstract fun withType (Lch/tutteli/atrium/assertions/AssertionGroupType;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
}

public final class ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$GroupTypeOption$DefaultImpls {
	public static fun getWithFeatureType (Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$GroupTypeOption;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
	public static fun getWithListType (Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$GroupTypeOption;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption {
	public abstract fun getFailing ()Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
	public abstract fun getGroupType ()Lch/tutteli/atrium/assertions/AssertionGroupType;
	public abstract fun getHolding ()Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
	public abstract fun withClaim (Z)Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
}

public final class ch/tutteli/atrium/assertions/builders/InvisibleGroupKt {
	public static final fun getInvisibleGroup (Lch/tutteli/atrium/assertions/builders/AssertionBuilder;)Lch/tutteli/atrium/assertions/builders/AssertionsOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$FinalStep : ch/tutteli/atrium/assertions/builders/BasicAssertionGroupFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$FinalStep$Companion;
	public abstract fun getPreTransformationHolds ()Z
}

public final class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$FinalStep$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/util/List;Z)Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption : ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$GroupTypeOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption;
}

public final class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption$DefaultImpls {
	public static fun getWithFeatureType (Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
	public static fun getWithListType (Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption;)Lch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$HoldsOption : ch/tutteli/atrium/assertions/builders/FixedClaimLikeGroup$HoldsOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$HoldsOption$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$HoldsOption$Companion {
	public final fun create (Lch/tutteli/atrium/assertions/AssertionGroupType;)Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$HoldsOption;
}

public final class ch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroupKt {
	public static final fun getPartiallyFixedClaimGroup (Lch/tutteli/atrium/assertions/builders/AssertionBuilder;)Lch/tutteli/atrium/assertions/builders/PartiallyFixedClaimGroup$GroupTypeOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/RepresentationOnly {
}

public abstract interface class ch/tutteli/atrium/assertions/builders/RepresentationOnly$FinalStep : ch/tutteli/atrium/assertions/builders/AssertionBuilderFinalStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/RepresentationOnly$FinalStep$Companion;
	public abstract fun getRepresentation ()Ljava/lang/Object;
	public abstract fun getTest ()Lkotlin/jvm/functions/Function0;
}

public final class ch/tutteli/atrium/assertions/builders/RepresentationOnly$FinalStep$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/RepresentationOnly$FinalStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/RepresentationOnly$HoldsStep : ch/tutteli/atrium/assertions/builders/common/HoldsStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/RepresentationOnly$HoldsStep$Companion;
}

public final class ch/tutteli/atrium/assertions/builders/RepresentationOnly$HoldsStep$Companion {
	public final fun create ()Lch/tutteli/atrium/assertions/builders/RepresentationOnly$HoldsStep;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/RepresentationOnly$RepresentationStep {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/RepresentationOnly$RepresentationStep$Companion;
	public abstract fun getTest ()Lkotlin/jvm/functions/Function0;
	public abstract fun withRepresentation (Ljava/lang/Object;)Lch/tutteli/atrium/assertions/builders/RepresentationOnly$FinalStep;
}

public final class ch/tutteli/atrium/assertions/builders/RepresentationOnly$RepresentationStep$Companion {
	public final fun create (Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/assertions/builders/RepresentationOnly$RepresentationStep;
}

public final class ch/tutteli/atrium/assertions/builders/RootKt {
	public static final fun getRoot (Lch/tutteli/atrium/assertions/builders/AssertionBuilder;)Lch/tutteli/atrium/assertions/builders/AssertionGroupDescriptionAndRepresentationOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/SubjectBasedOption {
	public static final field Companion Lch/tutteli/atrium/assertions/builders/SubjectBasedOption$Companion;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/SubjectBasedOption$AbsentOption {
	public abstract fun getIfDefined ()Lkotlin/jvm/functions/Function1;
	public abstract fun ifAbsent (Lkotlin/jvm/functions/Function0;)Lkotlin/Pair;
}

public final class ch/tutteli/atrium/assertions/builders/SubjectBasedOption$AbsentOption$DefaultImpls {
	public static fun ifAbsent (Lch/tutteli/atrium/assertions/builders/SubjectBasedOption$AbsentOption;Lkotlin/jvm/functions/Function0;)Lkotlin/Pair;
}

public final class ch/tutteli/atrium/assertions/builders/SubjectBasedOption$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/SubjectBasedOption$DefinedOption {
	public abstract fun ifDefined (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/assertions/builders/SubjectBasedOption$AbsentOption;
}

public abstract interface class ch/tutteli/atrium/assertions/builders/common/HoldsStep {
	public abstract fun getFailing ()Ljava/lang/Object;
	public abstract fun getHolding ()Ljava/lang/Object;
	public abstract fun withTest (Lch/tutteli/atrium/creating/Expect;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public abstract fun withTest (Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/assertions/builders/impl/representationOnly/RepresentationOnlyAssertionImpl : ch/tutteli/atrium/assertions/RepresentationOnlyAssertion {
	public fun <init> (Lkotlin/jvm/functions/Function0;Ljava/lang/Object;)V
	public fun getRepresentation ()Ljava/lang/Object;
	public fun holds ()Z
}

public final class ch/tutteli/atrium/core/BooleanProviderKt {
	public static final fun getFalseProvider ()Lkotlin/jvm/functions/Function0;
	public static final fun getTrueProvider ()Lkotlin/jvm/functions/Function0;
}

public abstract class ch/tutteli/atrium/core/Either {
	public final fun fold (Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun map (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/core/Either;
	public final fun toOption ()Lch/tutteli/atrium/core/Option;
}

public final class ch/tutteli/atrium/core/EitherKt {
	public static final fun flatMap (Lch/tutteli/atrium/core/Either;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/core/Either;
}

public abstract interface annotation class ch/tutteli/atrium/core/ExperimentalNewExpectTypes : java/lang/annotation/Annotation {
}

public final class ch/tutteli/atrium/core/Left : ch/tutteli/atrium/core/Either {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lch/tutteli/atrium/core/Left;
	public static synthetic fun copy$default (Lch/tutteli/atrium/core/Left;Ljava/lang/Object;ILjava/lang/Object;)Lch/tutteli/atrium/core/Left;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getL ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/core/None : ch/tutteli/atrium/core/Option {
	public static final field INSTANCE Lch/tutteli/atrium/core/None;
	public fun toString ()Ljava/lang/String;
}

public abstract class ch/tutteli/atrium/core/Option {
	public static final field Companion Lch/tutteli/atrium/core/Option$Companion;
	public final fun filter (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/core/Option;
	public final fun flatMap (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/core/Option;
	public final fun fold (Lkotlin/jvm/functions/Function0;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;
	public final fun ifDefined (Lkotlin/jvm/functions/Function1;)V
	public final fun isDefined ()Z
	public final fun map (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/core/Option;
}

public final class ch/tutteli/atrium/core/Option$Companion {
	public final fun someIf (ZLkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/core/Option;
}

public final class ch/tutteli/atrium/core/OptionKt {
	public static final fun getOrElse (Lch/tutteli/atrium/core/Option;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/core/Right : ch/tutteli/atrium/core/Either {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lch/tutteli/atrium/core/Right;
	public static synthetic fun copy$default (Lch/tutteli/atrium/core/Right;Ljava/lang/Object;ILjava/lang/Object;)Lch/tutteli/atrium/core/Right;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getR ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/core/Some : ch/tutteli/atrium/core/Option {
	public fun <init> (Ljava/lang/Object;)V
	public final fun component1 ()Ljava/lang/Object;
	public final fun copy (Ljava/lang/Object;)Lch/tutteli/atrium/core/Some;
	public static synthetic fun copy$default (Lch/tutteli/atrium/core/Some;Ljava/lang/Object;ILjava/lang/Object;)Lch/tutteli/atrium/core/Some;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getValue ()Ljava/lang/Object;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/core/polyfills/CharExtensionsKt {
	public static final fun isHighSurrogate (C)Z
}

public final class ch/tutteli/atrium/core/polyfills/FormatFloatingPointNumberKt {
	public static final fun formatFloatingPointNumber (Ljava/lang/Number;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/core/polyfills/KClassExtensionsKt {
	public static final fun cast (Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/Object;
	public static final fun fullName (Lkotlin/reflect/KClass;Ljava/lang/Object;)Ljava/lang/String;
	public static final fun getFullName (Lkotlin/reflect/KClass;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/core/polyfills/StringBuilderExtensionKt {
	public static final fun appendln (Ljava/lang/StringBuilder;)Ljava/lang/StringBuilder;
}

public final class ch/tutteli/atrium/core/polyfills/StringBuilderExtensionsKt {
	public static final fun appendSpaces (Ljava/lang/StringBuilder;I)V
}

public final class ch/tutteli/atrium/core/polyfills/StringExtensionsKt {
	public static final fun format (Ljava/lang/String;Lch/tutteli/atrium/reporting/translating/Locale;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
	public static final fun format (Ljava/lang/String;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/core/polyfills/ThrowableExtensionsKt {
	public static final fun getStackBacktrace (Ljava/lang/Throwable;)Ljava/util/List;
}

public abstract interface class ch/tutteli/atrium/creating/AssertionContainer {
	public abstract fun append (Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun appendAsGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun createAndAppend (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun createAndAppend (Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun getComponents ()Lch/tutteli/atrium/creating/ComponentFactoryContainer;
	public abstract fun getImpl (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun getMaybeSubject ()Lch/tutteli/atrium/core/Option;
}

public final class ch/tutteli/atrium/creating/AssertionContainer$DefaultImpls {
	public static fun createAndAppend (Lch/tutteli/atrium/creating/AssertionContainer;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public static fun createAndAppend (Lch/tutteli/atrium/creating/AssertionContainer;Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/AssertionContainerKt {
	public static final fun toExpect (Lch/tutteli/atrium/creating/AssertionContainer;)Lch/tutteli/atrium/creating/Expect;
}

public abstract interface class ch/tutteli/atrium/creating/CollectingExpect : ch/tutteli/atrium/creating/Expect {
	public static final field Companion Lch/tutteli/atrium/creating/CollectingExpect$Companion;
	public abstract fun appendAsGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/CollectingExpect;
	public abstract fun appendAsGroupIndicateIfOneCollected (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lkotlin/Pair;
	public abstract fun getAssertions ()Ljava/util/List;
	public abstract fun getCollectedProofs ()Ljava/util/List;
}

public final class ch/tutteli/atrium/creating/CollectingExpect$Companion {
	public final fun invoke (Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/creating/ComponentFactoryContainer;)Lch/tutteli/atrium/creating/CollectingExpect;
}

public final class ch/tutteli/atrium/creating/ComponentFactory {
	public fun <init> (Lkotlin/jvm/functions/Function1;Z)V
	public final fun component1 ()Lkotlin/jvm/functions/Function1;
	public final fun component2 ()Z
	public final fun copy (Lkotlin/jvm/functions/Function1;Z)Lch/tutteli/atrium/creating/ComponentFactory;
	public static synthetic fun copy$default (Lch/tutteli/atrium/creating/ComponentFactory;Lkotlin/jvm/functions/Function1;ZILjava/lang/Object;)Lch/tutteli/atrium/creating/ComponentFactory;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getBuild ()Lkotlin/jvm/functions/Function1;
	public final fun getProducesSingleton ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/creating/ComponentFactoryContainer {
	public static final field Companion Lch/tutteli/atrium/creating/ComponentFactoryContainer$Companion;
	public abstract fun buildChainedOrNull (Lkotlin/reflect/KClass;)Lkotlin/sequences/Sequence;
	public abstract fun buildOrNull (Lkotlin/reflect/KClass;)Ljava/lang/Object;
	public abstract fun getFactoryForChainedOrNull (Lkotlin/reflect/KClass;)Lkotlin/sequences/Sequence;
	public abstract fun getFactoryOrNull (Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/ComponentFactory;
	public abstract fun merge (Lch/tutteli/atrium/creating/ComponentFactoryContainer;)Lch/tutteli/atrium/creating/ComponentFactoryContainer;
}

public final class ch/tutteli/atrium/creating/ComponentFactoryContainer$Companion {
	public final fun createIfNotEmpty (Ljava/util/Map;Ljava/util/Map;)Lch/tutteli/atrium/creating/ComponentFactoryContainer;
}

public abstract interface class ch/tutteli/atrium/creating/DelegatingExpect : ch/tutteli/atrium/creating/Expect {
	public static final field Companion Lch/tutteli/atrium/creating/DelegatingExpect$Companion;
}

public final class ch/tutteli/atrium/creating/DelegatingExpect$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/AssertionContainer;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/ErrorMessages : java/lang/Enum, ch/tutteli/atrium/reporting/translating/StringBasedTranslatable {
	public static final field AT_LEAST_ONE_EXPECTATION_DEFINED Lch/tutteli/atrium/creating/ErrorMessages;
	public static final field FORGOT_DO_DEFINE_EXPECTATION Lch/tutteli/atrium/creating/ErrorMessages;
	public static final field HINT_AT_LEAST_ONE_EXPECTATION_DEFINED Lch/tutteli/atrium/creating/ErrorMessages;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getId ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public fun getString ()Ljava/lang/String;
	public fun getValue ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/creating/ErrorMessages;
	public static fun values ()[Lch/tutteli/atrium/creating/ErrorMessages;
}

public abstract interface class ch/tutteli/atrium/creating/Expect {
}

public abstract interface class ch/tutteli/atrium/creating/ExpectGrouping {
}

public abstract interface class ch/tutteli/atrium/creating/ExpectInternal : ch/tutteli/atrium/creating/AssertionContainer, ch/tutteli/atrium/creating/Expect, ch/tutteli/atrium/creating/ExpectGrouping, ch/tutteli/atrium/creating/ProofContainer {
}

public final class ch/tutteli/atrium/creating/ExpectInternal$DefaultImpls {
	public static fun createAndAppend (Lch/tutteli/atrium/creating/ExpectInternal;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public static fun createAndAppend (Lch/tutteli/atrium/creating/ExpectInternal;Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints {
	public fun <init> (Ljava/util/List;Lkotlin/jvm/functions/Function1;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;
	public static synthetic fun copy$default (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;Ljava/util/List;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExpectationCreator ()Lkotlin/jvm/functions/Function1;
	public final fun getUsageHintsOverloadWithoutExpectationCreator ()Ljava/util/List;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/creating/ExpectationVerbs {
	public abstract fun expect (Ljava/lang/Object;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun expect (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun expectGrouped (Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/ExpectGrouping;
	public abstract fun expectInExpectGrouped (Lch/tutteli/atrium/creating/ExpectGrouping;Ljava/lang/Object;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun expectInExpectGrouped (Lch/tutteli/atrium/creating/ExpectGrouping;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun getDefaultExpectGroupDescription ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/creating/ExpectationVerbs$DefaultImpls {
	public static synthetic fun expectGrouped$default (Lch/tutteli/atrium/creating/ExpectationVerbs;Ljava/lang/String;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lch/tutteli/atrium/creating/ExpectGrouping;
}

public abstract interface annotation class ch/tutteli/atrium/creating/ExperimentalComponentFactoryContainer : java/lang/annotation/Annotation {
}

public abstract interface class ch/tutteli/atrium/creating/FeatureExpect : ch/tutteli/atrium/creating/Expect {
	public static final field Companion Lch/tutteli/atrium/creating/FeatureExpect$Companion;
}

public final class ch/tutteli/atrium/creating/FeatureExpect$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/util/List;Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/FeatureExpect;
	public final fun invoke (Lch/tutteli/atrium/creating/Expect;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/util/List;Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/FeatureExpect;
	public final fun invoke (Lch/tutteli/atrium/creating/FeatureExpect;Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/FeatureExpect;
}

public final class ch/tutteli/atrium/creating/FeatureExpectOptions {
	public fun <init> ()V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;)V
	public synthetic fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public final fun component2 ()Lkotlin/jvm/functions/Function1;
	public final fun copy (Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/FeatureExpectOptions;
	public static synthetic fun copy$default (Lch/tutteli/atrium/creating/FeatureExpectOptions;Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lch/tutteli/atrium/creating/FeatureExpectOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getDescription ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public final fun getRepresentationInsteadOfFeature ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public final fun merge (Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/FeatureExpectOptions;
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/creating/PleaseUseReplacementException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public abstract interface class ch/tutteli/atrium/creating/ProofContainer : ch/tutteli/atrium/creating/AssertionContainer {
	public abstract fun append (Lch/tutteli/atrium/creating/proofs/Proof;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun appendAsGroupIndicateIfOneCollected (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lkotlin/Pair;
	public abstract fun getComponents ()Lch/tutteli/atrium/creating/ComponentFactoryContainer;
	public abstract fun getImpl (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public abstract fun getMaybeSubject ()Lch/tutteli/atrium/core/Option;
}

public final class ch/tutteli/atrium/creating/ProofContainer$DefaultImpls {
	public static fun createAndAppend (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public static fun createAndAppend (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/ProofContainerKt {
	public static final fun toExpect (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/Expect;
	public static final fun toExpectGrouping (Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/creating/ExpectGrouping;
	public static final fun toProofContainer (Lch/tutteli/atrium/creating/Expect;)Lch/tutteli/atrium/creating/ProofContainer;
}

public abstract interface class ch/tutteli/atrium/creating/RootExpect : ch/tutteli/atrium/creating/Expect {
	public static final field Companion Lch/tutteli/atrium/creating/RootExpect$Companion;
}

public final class ch/tutteli/atrium/creating/RootExpect$Companion {
	public final fun invoke (Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/reporting/reportables/InlineElement;Lch/tutteli/atrium/creating/RootExpectOptions;)Lch/tutteli/atrium/creating/RootExpect;
	public final fun invoke (Lch/tutteli/atrium/creating/RootExpect;Lch/tutteli/atrium/creating/RootExpectOptions;)Lch/tutteli/atrium/creating/RootExpect;
}

public final class ch/tutteli/atrium/creating/RootExpectOptions {
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/ComponentFactoryContainer;)V
	public final fun component1 ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public final fun component2 ()Lkotlin/jvm/functions/Function1;
	public final fun component3 ()Lch/tutteli/atrium/creating/ComponentFactoryContainer;
	public final fun copy (Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/ComponentFactoryContainer;)Lch/tutteli/atrium/creating/RootExpectOptions;
	public static synthetic fun copy$default (Lch/tutteli/atrium/creating/RootExpectOptions;Lch/tutteli/atrium/reporting/translating/Translatable;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/ComponentFactoryContainer;ILjava/lang/Object;)Lch/tutteli/atrium/creating/RootExpectOptions;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getComponentFactoryContainer ()Lch/tutteli/atrium/creating/ComponentFactoryContainer;
	public final fun getExpectationVerb ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public final fun getRepresentationInsteadOfSubject ()Lkotlin/jvm/functions/Function1;
	public fun hashCode ()I
	public final fun merge (Lch/tutteli/atrium/creating/RootExpectOptions;)Lch/tutteli/atrium/creating/RootExpectOptions;
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/creating/UtilsCollectKt {
	public static final fun collect (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun collectAndDomainAppend (Lch/tutteli/atrium/creating/transformers/TransformationExecutionStep;Ljava/util/List;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public static final fun collectBasedOnGivenSubject (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun collectForComposition (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lkotlin/Pair;
	public static final fun collectForCompositionBasedOnGivenSubject (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lkotlin/Pair;
	public static final fun collectForFailureHint (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lkotlin/Pair;
}

public final class ch/tutteli/atrium/creating/UtilsKt {
	public static final fun getChangeSubject (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$KindStep;
}

public abstract interface annotation class ch/tutteli/atrium/creating/feature/ExperimentalFeatureInfo : java/lang/annotation/Annotation {
}

public abstract interface class ch/tutteli/atrium/creating/feature/FeatureInfo {
	public abstract fun determine (Lkotlin/jvm/functions/Function1;I)Ljava/lang/String;
}

public final class ch/tutteli/atrium/creating/feature/impl/StackTraceBasedFeatureInfo : ch/tutteli/atrium/creating/feature/FeatureInfo {
	public fun <init> ()V
	public fun determine (Lkotlin/jvm/functions/Function1;I)Ljava/lang/String;
}

public abstract class ch/tutteli/atrium/creating/impl/BaseExpectImpl : ch/tutteli/atrium/creating/ExpectInternal {
	public static final field Companion Lch/tutteli/atrium/creating/impl/BaseExpectImpl$Companion;
	public fun <init> (Lch/tutteli/atrium/core/Option;)V
	public fun append (Lch/tutteli/atrium/assertions/Assertion;)Lch/tutteli/atrium/creating/Expect;
	protected final fun appendAsGroup (Ljava/util/List;)Lch/tutteli/atrium/creating/Expect;
	public fun appendAsGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public fun appendAsGroupIndicateIfOneCollected (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lkotlin/Pair;
	public fun createAndAppend (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public fun createAndAppend (Ljava/lang/String;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
	public fun getImpl (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function0;)Ljava/lang/Object;
	public fun getMaybeSubject ()Lch/tutteli/atrium/core/Option;
	public final fun registerImpl (Lkotlin/reflect/KClass;Lkotlin/jvm/functions/Function1;)V
}

public final class ch/tutteli/atrium/creating/impl/BaseExpectImpl$Companion {
	public final fun determineRepresentation (Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/core/Option;)Ljava/lang/Object;
}

public final class ch/tutteli/atrium/creating/proofs/AnyKt {
	public static final fun notToBeTheInstance (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun notToEqual (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun notToEqualNullButToBeAnInstanceOf (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public static final fun notToEqualOneIn (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Iterable;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun toBeAnInstanceOf (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public static final fun toBeTheInstance (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun toEqual (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public abstract interface class ch/tutteli/atrium/creating/proofs/AnyProofs {
	public abstract fun notToBeTheInstance (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public abstract fun notToEqual (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public abstract fun notToEqualNullButToBeAnInstanceOf (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public abstract fun notToEqualOneIn (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Iterable;)Lch/tutteli/atrium/creating/proofs/Proof;
	public abstract fun toBeAnInstanceOf (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public abstract fun toBeTheInstance (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public abstract fun toEqual (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public abstract interface class ch/tutteli/atrium/creating/proofs/DocumentationUtils {
	public abstract fun because (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public final class ch/tutteli/atrium/creating/proofs/DocumentationUtilsKt {
	public static final fun because (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public abstract interface class ch/tutteli/atrium/creating/proofs/FeatureProofGroup : ch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation {
}

public final class ch/tutteli/atrium/creating/proofs/FeatureProofGroup$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/FeatureProofGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/FeatureProofGroup;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/FixedClaimGroup : ch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation {
}

public final class ch/tutteli/atrium/creating/proofs/FixedClaimGroup$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/FixedClaimGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/FixedClaimGroup;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/InvisibleFailingProof : ch/tutteli/atrium/creating/proofs/InvisibleLikeProofGroup {
}

public final class ch/tutteli/atrium/creating/proofs/InvisibleFailingProof$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/InvisibleFailingProof;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/InvisibleFailingProof;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/InvisibleLikeProofGroup : ch/tutteli/atrium/creating/proofs/ProofGroup {
}

public final class ch/tutteli/atrium/creating/proofs/InvisibleLikeProofGroup$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/InvisibleLikeProofGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/InvisibleLikeProofGroup;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/InvisibleProofGroup : ch/tutteli/atrium/creating/proofs/InvisibleLikeProofGroup {
}

public final class ch/tutteli/atrium/creating/proofs/InvisibleProofGroup$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/InvisibleProofGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/InvisibleProofGroup;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/Proof : ch/tutteli/atrium/reporting/reportables/Reportable {
	public static final field Companion Lch/tutteli/atrium/creating/proofs/Proof$Companion;
	public abstract fun holds ()Z
}

public final class ch/tutteli/atrium/creating/proofs/Proof$Companion {
	public final fun featureGroup (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Ljava/util/List;)Lch/tutteli/atrium/creating/proofs/FeatureProofGroup;
	public final fun fixedClaimGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Ljava/util/List;Z)Lch/tutteli/atrium/creating/proofs/FixedClaimGroup;
	public final fun group (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Ljava/util/List;)Lch/tutteli/atrium/creating/proofs/ProofGroup;
	public final fun invisibleFailingProofGroup (Ljava/util/List;)Lch/tutteli/atrium/creating/proofs/InvisibleFailingProof;
	public final fun invisibleGroup (Ljava/util/List;)Lch/tutteli/atrium/creating/proofs/InvisibleProofGroup;
	public final fun invisibleGroupOrSingleChildIfProof (Ljava/util/List;)Lch/tutteli/atrium/creating/proofs/Proof;
	public final fun representationOnlyProof (Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/proofs/Proof;
	public final fun rootGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Ljava/util/List;)Lch/tutteli/atrium/creating/proofs/RootProofGroup;
	public final fun simple (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public abstract interface class ch/tutteli/atrium/creating/proofs/ProofGroup : ch/tutteli/atrium/creating/proofs/Proof, ch/tutteli/atrium/reporting/reportables/ReportableGroup {
	public abstract fun getProofs ()Ljava/util/List;
	public abstract fun holds ()Z
}

public final class ch/tutteli/atrium/creating/proofs/ProofGroup$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/ProofGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/ProofGroup;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation : ch/tutteli/atrium/creating/proofs/ProofGroup, ch/tutteli/atrium/reporting/reportables/ReportableGroupWithDesignation {
}

public final class ch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/RootProofGroup : ch/tutteli/atrium/creating/proofs/ProofGroupWithDesignation {
}

public final class ch/tutteli/atrium/creating/proofs/RootProofGroup$DefaultImpls {
	public static fun getProofs (Lch/tutteli/atrium/creating/proofs/RootProofGroup;)Ljava/util/List;
	public static fun holds (Lch/tutteli/atrium/creating/proofs/RootProofGroup;)Z
}

public abstract interface class ch/tutteli/atrium/creating/proofs/SimpleProof : ch/tutteli/atrium/creating/proofs/Proof, ch/tutteli/atrium/reporting/reportables/ReportableWithInlineDesignation {
}

public final class ch/tutteli/atrium/creating/proofs/UtilsKt {
	public static final fun unwrapInvisibleGroup (Ljava/util/List;)Ljava/util/List;
	public static final fun unwrapInvisibleGroupIfSingleElement (Ljava/util/List;)Ljava/util/List;
}

public final class ch/tutteli/atrium/creating/proofs/builders/DebugGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/DiagnosticGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/EntryPointProofBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseGroupBuilder {
	public synthetic fun build (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/Reportable;
}

public final class ch/tutteli/atrium/creating/proofs/builders/EntryPointProofBuilderKt {
	public static final fun buildProof (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun buildSimpleProof (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public static final fun toTestFunction (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;)Lkotlin/jvm/functions/Function0;
}

public final class ch/tutteli/atrium/creating/proofs/builders/FailureExplanationGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/FeatureProofGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/FixedClaimGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Z)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/InformationGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/InvisibleFailingProofGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseBuilder, ch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilderDelegate;)V
	public synthetic fun build (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public fun debugGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun diagnosticGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun failureExplanationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun informationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun inlineGroup ([Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public fun proofExplanation (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun row (Lch/tutteli/atrium/reporting/reportables/Icon;ZLkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun text (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun usageHintGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
}

public final class ch/tutteli/atrium/creating/proofs/builders/InvisibleProofGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
}

public abstract interface annotation class ch/tutteli/atrium/creating/proofs/builders/ProofBuilderMarker : java/lang/annotation/Annotation {
}

public final class ch/tutteli/atrium/creating/proofs/builders/ProofExplanationGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
	public final fun collectWithoutSubject (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Z
}

public final class ch/tutteli/atrium/creating/proofs/builders/ProofGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;)V
}

public final class ch/tutteli/atrium/creating/proofs/builders/RowBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/Icon;Z)V
	public synthetic fun build (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public final fun column (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/reportables/Column;
	public static synthetic fun column$default (Lch/tutteli/atrium/creating/proofs/builders/RowBuilder;Lch/tutteli/atrium/reporting/reportables/InlineElement;Lch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/reportables/Column;
}

public final class ch/tutteli/atrium/creating/proofs/builders/UsageHintGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
}

public abstract class ch/tutteli/atrium/creating/proofs/builders/impl/BaseBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/ReportableBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
	public final fun add (Lch/tutteli/atrium/reporting/reportables/Reportable;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public final fun addAll (Ljava/util/List;)V
	public final fun addAll ([Lch/tutteli/atrium/reporting/reportables/Reportable;)V
	protected abstract fun build (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public final fun build (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public fun getProofContainer ()Lch/tutteli/atrium/creating/ProofContainer;
}

public abstract class ch/tutteli/atrium/creating/proofs/builders/impl/BaseGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseBuilder, ch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilderDelegate;)V
	public final fun _core (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public final fun collect (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Z
	public fun debugGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun diagnosticGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun failureExplanationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public final fun feature (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public final fun fixedClaimGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;ZLkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun informationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun inlineGroup ([Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public final fun invisibleFailingProofGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public final fun invisibleGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun proofExplanation (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public final fun proofGroup (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public final fun representationOnlyProof (Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun row (Lch/tutteli/atrium/reporting/reportables/Icon;ZLkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public final fun simpleProof (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun text (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun usageHintGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
}

public abstract class ch/tutteli/atrium/creating/proofs/builders/impl/BaseSubGroupBuilder : ch/tutteli/atrium/creating/proofs/builders/impl/BaseGroupBuilder {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;)V
	protected fun build (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/Reportable;
}

public abstract interface class ch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilder {
	public abstract fun debugGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun diagnosticGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun failureExplanationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun informationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun inlineGroup ([Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public abstract fun proofExplanation (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun row (Lch/tutteli/atrium/reporting/reportables/Icon;ZLkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun text (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun usageHintGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
}

public final class ch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilder$DefaultImpls {
	public static synthetic fun row$default (Lch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilder;Lch/tutteli/atrium/reporting/reportables/Icon;ZLkotlin/jvm/functions/Function1;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
}

public final class ch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilderDelegate : ch/tutteli/atrium/creating/proofs/builders/impl/DiagnosticBuilder {
	public field reportableBuilder Lch/tutteli/atrium/creating/proofs/builders/impl/ReportableBuilder;
	public fun <init> ()V
	public fun debugGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun diagnosticGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun failureExplanationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public final fun getReportableBuilder ()Lch/tutteli/atrium/creating/proofs/builders/impl/ReportableBuilder;
	public fun informationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun inlineGroup ([Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public fun proofExplanation (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun row (Lch/tutteli/atrium/reporting/reportables/Icon;ZLkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public final fun setReportableBuilder (Lch/tutteli/atrium/creating/proofs/builders/impl/ReportableBuilder;)V
	public fun text (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public fun usageHintGroup (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/reportables/Diagnostic;
}

public abstract interface class ch/tutteli/atrium/creating/proofs/builders/impl/ReportableBuilder {
	public abstract fun add (Lch/tutteli/atrium/reporting/reportables/Reportable;)Lch/tutteli/atrium/reporting/reportables/Reportable;
	public abstract fun addAll (Ljava/util/List;)V
	public abstract fun addAll ([Lch/tutteli/atrium/reporting/reportables/Reportable;)V
	public abstract fun getProofContainer ()Lch/tutteli/atrium/creating/ProofContainer;
}

public final class ch/tutteli/atrium/creating/proofs/impl/DefaultAnyProofs : ch/tutteli/atrium/creating/proofs/AnyProofs {
	public fun <init> ()V
	public fun notToBeTheInstance (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun notToEqual (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun notToEqualNullButToBeAnInstanceOf (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public fun notToEqualOneIn (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Iterable;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun toBeAnInstanceOf (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public fun toBeTheInstance (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
	public fun toEqual (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Object;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public final class ch/tutteli/atrium/creating/proofs/impl/DefaultDocumentationUtils : ch/tutteli/atrium/creating/proofs/DocumentationUtils {
	public fun <init> ()V
	public fun because (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public final class ch/tutteli/atrium/creating/transformers/FailureHandlerAdapter : ch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler {
	public fun <init> (Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;Lkotlin/jvm/functions/Function1;)V
	public fun createProof (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/proofs/Proof;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractor {
	public abstract fun extract (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/FeatureExpect;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$Companion;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$DescriptionStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$DescriptionStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$DescriptionStep$Companion;
	public abstract fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public abstract fun withDescription (Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$DescriptionStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$DescriptionStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep : ch/tutteli/atrium/creating/transformers/TransformationExecutionStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep$Companion;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep$Companion;
	public abstract fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public abstract fun getRepresentationForFailure ()Ljava/lang/Object;
	public abstract fun withFeatureExtraction (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep$Companion;
	public abstract fun build ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep;
	public abstract fun getFeatureExpectOptions ()Lch/tutteli/atrium/creating/FeatureExpectOptions;
	public abstract fun getFeatureExtraction ()Lkotlin/jvm/functions/Function1;
	public abstract fun getFeatureExtractionStep ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep$Companion;
	public abstract fun getFeatureExtraction ()Lkotlin/jvm/functions/Function1;
	public abstract fun getFeatureExtractionStep ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
	public abstract fun withOptions (Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep;
	public abstract fun withoutOptions ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep$Companion;
	public abstract fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public abstract fun withRepresentationForFailure (Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
	public abstract fun withRepresentationForFailure (Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep;
}

public final class ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep$DefaultImpls {
	public static fun withRepresentationForFailure (Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep;Lkotlin/jvm/functions/Function0;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
}

public final class ch/tutteli/atrium/creating/transformers/ImplsKt {
	public static final fun getFeatureExtractor (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/FeatureExtractor;
	public static final fun getSubjectChanger (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/SubjectChanger;
}

public final class ch/tutteli/atrium/creating/transformers/PropertiesOfThrowableKt {
	public static final fun addChildHint (Lch/tutteli/atrium/creating/proofs/builders/impl/BaseGroupBuilder;Ljava/lang/Throwable;Ljava/lang/Throwable;Lch/tutteli/atrium/reporting/reportables/InlineElement;)V
	public static final fun propertiesOfThrowable (Lch/tutteli/atrium/creating/ProofContainer;Ljava/lang/Throwable;)Lch/tutteli/atrium/reporting/reportables/Reportable;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChanger {
	public abstract fun reported (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun unreported (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler {
	public abstract fun createProof (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/proofs/Proof;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$Companion;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$KindStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep$Companion;
	public abstract fun downCastTo (Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;
	public abstract fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public abstract fun withDescriptionAndRepresentation (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
	public abstract fun withDescriptionAndRepresentation (Ljava/lang/String;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep$DefaultImpls {
	public static fun downCastTo (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep;Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;
	public static fun withDescriptionAndRepresentation (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep;Ljava/lang/String;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep : ch/tutteli/atrium/creating/transformers/TransformationExecutionStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep$Companion;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep$Companion;
	public abstract fun build ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public abstract fun getTransformation ()Lkotlin/jvm/functions/Function1;
	public abstract fun getTransformationStep ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
	public abstract fun withDefaultFailureHandler ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
	public abstract fun withFailureHandler (Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
	public abstract fun withFailureHandlerAdapter (Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep$DefaultImpls {
	public static fun build (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public static fun withFailureHandlerAdapter (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep$Companion;
	public abstract fun build ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public abstract fun getFailureHandler ()Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;
	public abstract fun getTransformation ()Lkotlin/jvm/functions/Function1;
	public abstract fun getTransformationStep ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$KindStep {
	public abstract fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public abstract fun reportBuilder ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep;
	public abstract fun unreported (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$KindStep$DefaultImpls {
	public static fun unreported (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$KindStep;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep {
	public static final field Companion Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep$Companion;
	public abstract fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public abstract fun getRepresentation ()Ljava/lang/Object;
	public abstract fun withTransformation (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;
}

public final class ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep$Companion {
	public final fun invoke (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
}

public abstract interface class ch/tutteli/atrium/creating/transformers/TransformationExecutionStep {
	public abstract fun collect (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/proofs/Proof;
	public abstract fun collectAndAppend (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/Expect;
	public abstract fun transform ()Lch/tutteli/atrium/creating/Expect;
	public abstract fun transformAndAppend (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/Expect;
}

public abstract class ch/tutteli/atrium/creating/transformers/impl/BaseTransformationExecutionStep : ch/tutteli/atrium/creating/transformers/TransformationExecutionStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
	public final fun collect (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/proofs/Proof;
	public final fun collectAndAppend (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/Expect;
	protected final fun getAction ()Lkotlin/jvm/functions/Function1;
	protected final fun getActionAndApply ()Lkotlin/jvm/functions/Function2;
	protected final fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public final fun transform ()Lch/tutteli/atrium/creating/Expect;
	public final fun transformAndAppend (Lch/tutteli/atrium/creating/ExpectationCreatorWithUsageHints;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/transformers/impl/CreateAdditionalHintsKt {
	public static final fun addAdditionalHints (Lch/tutteli/atrium/creating/proofs/builders/impl/BaseGroupBuilder;Ljava/lang/Throwable;)V
}

public final class ch/tutteli/atrium/creating/transformers/impl/DefaultFeatureExtractor : ch/tutteli/atrium/creating/transformers/FeatureExtractor {
	public fun <init> ()V
	public fun extract (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/core/Option;Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/FeatureExpect;
}

public final class ch/tutteli/atrium/creating/transformers/impl/DefaultSubjectChanger : ch/tutteli/atrium/creating/transformers/SubjectChanger {
	public fun <init> ()V
	public fun reported (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/Expect;
	public fun unreported (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/transformers/impl/ThrowableThrownFailureHandler : ch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler {
	public fun <init> ()V
	public fun createProof (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/proofs/Proof;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/featureextractor/DescriptionStepImpl : ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$DescriptionStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
	public fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public fun withDescription (Lch/tutteli/atrium/reporting/reportables/InlineElement;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$RepresentationInCaseOfFailureStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/featureextractor/ExecutionStepImpl : ch/tutteli/atrium/creating/transformers/impl/BaseTransformationExecutionStep, ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/featureextractor/FeatureExtractionStepImpl : ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)V
	public fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public fun getDescription ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public fun getRepresentationForFailure ()Ljava/lang/Object;
	public fun withFeatureExtraction (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/featureextractor/FinalStepImpl : ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep {
	public fun <init> (Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/FeatureExpectOptions;)V
	public fun build ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$ExecutionStep;
	public fun getFeatureExpectOptions ()Lch/tutteli/atrium/creating/FeatureExpectOptions;
	public fun getFeatureExtraction ()Lkotlin/jvm/functions/Function1;
	public fun getFeatureExtractionStep ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/featureextractor/OptionsStepImpl : ch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$OptionsStep {
	public fun <init> (Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;Lkotlin/jvm/functions/Function1;)V
	public fun getFeatureExtraction ()Lkotlin/jvm/functions/Function1;
	public fun getFeatureExtractionStep ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FeatureExtractionStep;
	public fun withOptions (Lch/tutteli/atrium/creating/FeatureExpectOptions;)Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep;
	public fun withoutOptions ()Lch/tutteli/atrium/creating/transformers/FeatureExtractorBuilder$FinalStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/DefaultFailureHandlerImpl : ch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler {
	public fun <init> ()V
	public fun createProof (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/creating/proofs/Proof;Lch/tutteli/atrium/core/Option;)Lch/tutteli/atrium/creating/proofs/Proof;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/DescriptionRepresentationStepImpl : ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
	public fun downCastTo (Lkotlin/reflect/KClass;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;
	public fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public fun withDescriptionAndRepresentation (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
	public fun withDescriptionAndRepresentation (Ljava/lang/String;Ljava/lang/Object;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/ExecutionStepImpl : ch/tutteli/atrium/creating/transformers/impl/BaseTransformationExecutionStep, ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)V
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/FailureHandlerStepImpl : ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep {
	public fun <init> (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;Lkotlin/jvm/functions/Function1;)V
	public fun build ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public fun getTransformation ()Lkotlin/jvm/functions/Function1;
	public fun getTransformationStep ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
	public fun withDefaultFailureHandler ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
	public fun withFailureHandler (Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
	public fun withFailureHandlerAdapter (Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/FinalStepImpl : ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FinalStep {
	public fun <init> (Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;Lkotlin/jvm/functions/Function1;Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;)V
	public fun build ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$ExecutionStep;
	public fun getFailureHandler ()Lch/tutteli/atrium/creating/transformers/SubjectChanger$FailureHandler;
	public fun getTransformation ()Lkotlin/jvm/functions/Function1;
	public fun getTransformationStep ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/KindStepImpl : ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$KindStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;)V
	public fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public fun reportBuilder ()Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$DescriptionRepresentationStep;
	public fun unreported (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/Expect;
}

public final class ch/tutteli/atrium/creating/transformers/impl/builders/subjectchanger/TransformationStepImpl : ch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$TransformationStep {
	public fun <init> (Lch/tutteli/atrium/creating/ProofContainer;Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;)V
	public fun getContainer ()Lch/tutteli/atrium/creating/ProofContainer;
	public fun getDescription ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public fun getRepresentation ()Ljava/lang/Object;
	public fun withTransformation (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/creating/transformers/SubjectChangerBuilder$FailureHandlerStep;
}

public abstract interface class ch/tutteli/atrium/reporting/AssertionFormatter {
	public static final field Companion Lch/tutteli/atrium/reporting/AssertionFormatter$Companion;
	public abstract fun canFormat (Lch/tutteli/atrium/assertions/Assertion;)Z
	public abstract fun format (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
	public abstract fun formatGroup (Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function2;)V
	public abstract fun formatNonGroup (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public final class ch/tutteli/atrium/reporting/AssertionFormatter$Companion {
	public final fun getCALL_FORMAT_GROUP ()Ljava/lang/String;
	public final fun throwNotIntendedForAssertionGroups ()V
}

public final class ch/tutteli/atrium/reporting/AssertionFormatter$DefaultImpls {
	public static fun format (Lch/tutteli/atrium/reporting/AssertionFormatter;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public abstract interface class ch/tutteli/atrium/reporting/AssertionFormatterController {
	public static final field Companion Lch/tutteli/atrium/reporting/AssertionFormatterController$Companion;
	public abstract fun format (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
	public abstract fun isExplanatoryAssertionGroup (Lch/tutteli/atrium/assertions/Assertion;)Z
	public abstract fun register (Lch/tutteli/atrium/reporting/AssertionFormatter;)V
}

public final class ch/tutteli/atrium/reporting/AssertionFormatterController$Companion {
	public final fun noSuitableAssertionFormatterFound (Lch/tutteli/atrium/assertions/Assertion;)Ljava/lang/Void;
}

public final class ch/tutteli/atrium/reporting/AssertionFormatterController$DefaultImpls {
	public static fun isExplanatoryAssertionGroup (Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/assertions/Assertion;)Z
}

public abstract interface class ch/tutteli/atrium/reporting/AssertionFormatterFacade {
	public abstract fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;Lkotlin/jvm/functions/Function1;)V
	public abstract fun register (Lkotlin/jvm/functions/Function1;)V
}

public final class ch/tutteli/atrium/reporting/AssertionFormatterParameterObject {
	public static final field Companion Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject$Companion;
	public synthetic fun <init> (Ljava/lang/StringBuilder;Ljava/lang/String;ILkotlin/jvm/functions/Function1;IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun appendLnAndIndent ()V
	public final fun appendLnIndentAndPrefix ()V
	public final fun createChildWithNewPrefix (Ljava/lang/String;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun createChildWithNewPrefixAndAdditionalIndent (Ljava/lang/String;I)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun createForDoNotFilterAssertionGroup ()Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun createForExplanatoryFilterAssertionGroup (Ljava/lang/String;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public static synthetic fun createForExplanatoryFilterAssertionGroup$default (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Ljava/lang/String;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun createWithNewPrefix (Ljava/lang/String;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun getAssertionFilter ()Lkotlin/jvm/functions/Function1;
	public final fun getPrefix ()Ljava/lang/String;
	public final fun getSb ()Ljava/lang/StringBuilder;
	public final fun indent (I)V
	public final fun isNotInDoNotFilterGroup ()Z
	public final fun isNotInExplanatoryFilterGroup ()Z
}

public final class ch/tutteli/atrium/reporting/AssertionFormatterParameterObject$Companion {
	public final fun new (Ljava/lang/StringBuilder;Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
}

public abstract interface class ch/tutteli/atrium/reporting/AssertionPairFormatter {
	public abstract fun format (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V
	public abstract fun format (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Ljava/lang/String;Ljava/lang/Object;)V
	public abstract fun formatGroupHeader (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public final class ch/tutteli/atrium/reporting/AssertionPairFormatter$DefaultImpls {
	public static fun format (Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V
}

public final class ch/tutteli/atrium/reporting/AtriumError : org/opentest4j/AssertionFailedError {
	public static final field Companion Lch/tutteli/atrium/reporting/AtriumError$Companion;
	public final fun getCausingProof ()Lch/tutteli/atrium/creating/proofs/Proof;
	public fun getLocalizedMessage ()Ljava/lang/String;
	public fun getMessage ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/AtriumError$Companion {
	public final fun create (Ljava/lang/String;Lch/tutteli/atrium/creating/proofs/Proof;Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;)Lch/tutteli/atrium/reporting/AtriumError;
}

public abstract interface class ch/tutteli/atrium/reporting/AtriumErrorAdjuster : ch/tutteli/atrium/reporting/AtriumErrorAdjusterCommon {
	public abstract fun adjustStackTrace (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
}

public abstract interface class ch/tutteli/atrium/reporting/AtriumErrorAdjusterCommon {
	public abstract fun adjust (Ljava/lang/Throwable;)V
	public abstract fun adjustOtherThanStacks (Ljava/lang/Throwable;)V
}

public final class ch/tutteli/atrium/reporting/ConstantsKt {
	public static final field BUG_REPORT_URL Ljava/lang/String;
	public static final field SHOULD_NOT_BE_SHOWN_TO_THE_USER_BUG Ljava/lang/String;
	public static final fun bugErrorMessage (Ljava/lang/String;)Ljava/lang/String;
	public static final fun errorDueToBug (Ljava/lang/String;)Ljava/lang/Void;
	public static final fun failWithBugErrorIf (ZLkotlin/jvm/functions/Function0;)V
	public static final fun getForgotToAppendProofPseudoUsageHint ()Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/HorizontalAlignment : java/lang/Enum {
	public static final field CENTRE Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public static final field Companion Lch/tutteli/atrium/reporting/HorizontalAlignment$Companion;
	public static final field LEFT Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public static final field RIGHT Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public static fun values ()[Lch/tutteli/atrium/reporting/HorizontalAlignment;
}

public final class ch/tutteli/atrium/reporting/HorizontalAlignment$Companion {
	public final fun getDEFAULT ()Lch/tutteli/atrium/reporting/HorizontalAlignment;
}

public final class ch/tutteli/atrium/reporting/LazyRepresentation {
	public fun <init> (Lkotlin/jvm/functions/Function0;)V
	public final fun eval ()Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/reporting/MethodCallFormatter {
	public abstract fun formatArgument (Ljava/lang/Object;)Ljava/lang/String;
	public abstract fun formatCall (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/ObjectFormatter {
	public abstract fun format (Ljava/lang/Object;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/Reporter {
	public abstract fun createReport (Lch/tutteli/atrium/reporting/reportables/Reportable;)Ljava/lang/StringBuilder;
	public abstract fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)V
}

public final class ch/tutteli/atrium/reporting/Reporter$DefaultImpls {
	public static fun createReport (Lch/tutteli/atrium/reporting/Reporter;Lch/tutteli/atrium/reporting/reportables/Reportable;)Ljava/lang/StringBuilder;
}

public final class ch/tutteli/atrium/reporting/Text : ch/tutteli/atrium/reporting/reportables/TextElement {
	public static final field Companion Lch/tutteli/atrium/reporting/Text$Companion;
	public synthetic fun <init> (Ljava/lang/String;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;)Lch/tutteli/atrium/reporting/Text;
	public static synthetic fun copy$default (Lch/tutteli/atrium/reporting/Text;Ljava/lang/String;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/Text;
	public fun equals (Ljava/lang/Object;)Z
	public fun getString ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/Text$Companion {
	public final fun getEMPTY ()Lch/tutteli/atrium/reporting/Text;
	public final fun getEMPTY_PROVIDER ()Lkotlin/jvm/functions/Function0;
	public final fun getNULL ()Lch/tutteli/atrium/reporting/Text;
	public final fun getSPACE ()Lch/tutteli/atrium/reporting/Text;
	public final fun invoke (Ljava/lang/String;)Lch/tutteli/atrium/reporting/Text;
}

public abstract class ch/tutteli/atrium/reporting/erroradjusters/FilterAtriumErrorAdjuster : ch/tutteli/atrium/reporting/AtriumErrorAdjuster {
	public fun <init> ()V
	public final fun adjust (Ljava/lang/Throwable;)V
	public fun adjustOtherThanStacks (Ljava/lang/Throwable;)V
}

public final class ch/tutteli/atrium/reporting/erroradjusters/MultiAtriumErrorAdjuster : ch/tutteli/atrium/reporting/erroradjusters/FilterAtriumErrorAdjuster, ch/tutteli/atrium/reporting/AtriumErrorAdjuster {
	public fun <init> (Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;Lch/tutteli/atrium/reporting/AtriumErrorAdjuster;Ljava/util/List;)V
	public fun adjustStackTrace (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/erroradjusters/NoOpAtriumErrorAdjuster : ch/tutteli/atrium/reporting/erroradjusters/NoOpAtriumErrorAdjusterCommon, ch/tutteli/atrium/reporting/AtriumErrorAdjuster {
	public static final field INSTANCE Lch/tutteli/atrium/reporting/erroradjusters/NoOpAtriumErrorAdjuster;
	public fun adjustStackTrace (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
}

public abstract class ch/tutteli/atrium/reporting/erroradjusters/NoOpAtriumErrorAdjusterCommon : ch/tutteli/atrium/reporting/AtriumErrorAdjuster {
	public fun <init> ()V
	public fun adjust (Ljava/lang/Throwable;)V
	public fun adjustOtherThanStacks (Ljava/lang/Throwable;)V
}

public abstract interface class ch/tutteli/atrium/reporting/erroradjusters/RemoveAtriumFromAtriumError : ch/tutteli/atrium/reporting/AtriumErrorAdjuster {
}

public abstract interface class ch/tutteli/atrium/reporting/erroradjusters/RemoveRunnerFromAtriumError : ch/tutteli/atrium/reporting/AtriumErrorAdjuster {
}

public final class ch/tutteli/atrium/reporting/erroradjusters/impl/RemoveAtriumFromAtriumErrorImpl : ch/tutteli/atrium/reporting/erroradjusters/FilterAtriumErrorAdjuster, ch/tutteli/atrium/reporting/erroradjusters/RemoveAtriumFromAtriumError {
	public fun <init> ()V
	public fun adjustStackTrace (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
}

public final class ch/tutteli/atrium/reporting/erroradjusters/impl/RemoveRunnerFromAtriumErrorImpl : ch/tutteli/atrium/reporting/erroradjusters/FilterAtriumErrorAdjuster, ch/tutteli/atrium/reporting/erroradjusters/RemoveRunnerFromAtriumError {
	public fun <init> ()V
	public fun adjustStackTrace (Lkotlin/sequences/Sequence;)Lkotlin/sequences/Sequence;
}

public abstract interface class ch/tutteli/atrium/reporting/filters/ReportableFilter {
	public static final field Companion Lch/tutteli/atrium/reporting/filters/ReportableFilter$Companion;
	public abstract fun includeInReporting (Lch/tutteli/atrium/reporting/reportables/Reportable;)Z
}

public final class ch/tutteli/atrium/reporting/filters/ReportableFilter$Companion {
	public final fun failingProofsAndNonProof ()Lch/tutteli/atrium/reporting/filters/ReportableFilter;
	public final fun includeAll ()Lch/tutteli/atrium/reporting/filters/ReportableFilter;
}

public final class ch/tutteli/atrium/reporting/impl/AssertionFormatterControllerBasedFacade : ch/tutteli/atrium/reporting/AssertionFormatterFacade {
	public fun <init> (Lch/tutteli/atrium/reporting/AssertionFormatterController;)V
	public fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;Lkotlin/jvm/functions/Function1;)V
	public fun register (Lkotlin/jvm/functions/Function1;)V
}

public final class ch/tutteli/atrium/reporting/impl/DefaultAssertionFormatterController : ch/tutteli/atrium/reporting/AssertionFormatterController {
	public fun <init> ()V
	public fun format (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
	public fun isExplanatoryAssertionGroup (Lch/tutteli/atrium/assertions/Assertion;)Z
	public fun register (Lch/tutteli/atrium/reporting/AssertionFormatter;)V
}

public final class ch/tutteli/atrium/reporting/impl/OnlyFailureReporter : ch/tutteli/atrium/reporting/Reporter {
	public fun <init> (Lch/tutteli/atrium/reporting/AssertionFormatterFacade;)V
	public fun createReport (Lch/tutteli/atrium/reporting/reportables/Reportable;)Ljava/lang/StringBuilder;
	public fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)V
}

public final class ch/tutteli/atrium/reporting/prerendering/text/OutputNode {
	public static final field Companion Lch/tutteli/atrium/reporting/prerendering/text/OutputNode$Companion;
	public fun <init> (Ljava/util/List;Ljava/util/List;ZIIIZ)V
	public synthetic fun <init> (Ljava/util/List;Ljava/util/List;ZIIIZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/util/List;
	public final fun component2 ()Ljava/util/List;
	public final fun component3 ()Z
	public final fun component4 ()I
	public final fun component5 ()I
	public final fun component6 ()I
	public final fun component7 ()Z
	public final fun copy (Ljava/util/List;Ljava/util/List;ZIIIZ)Lch/tutteli/atrium/reporting/prerendering/text/OutputNode;
	public static synthetic fun copy$default (Lch/tutteli/atrium/reporting/prerendering/text/OutputNode;Ljava/util/List;Ljava/util/List;ZIIIZILjava/lang/Object;)Lch/tutteli/atrium/reporting/prerendering/text/OutputNode;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getChildren ()Ljava/util/List;
	public final fun getColumns ()Ljava/util/List;
	public final fun getDefinesOwnLevel ()Z
	public final fun getIndentLevel ()I
	public final fun getMergeColumns ()I
	public final fun getStartMergeAtColumn ()I
	public final fun getUsesOwnPrefix ()Z
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/OutputNode$Companion {
	public final fun singleWithoutColumnsNotOwnLevel (Ljava/util/List;)Ljava/util/List;
}

public abstract interface class ch/tutteli/atrium/reporting/prerendering/text/TextDesignationPreRenderer {
	public abstract fun canTransform (Lch/tutteli/atrium/reporting/reportables/Diagnostic;)Z
	public abstract fun transform (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;ILjava/util/List;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject : ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController {
	public fun <init> (Lch/tutteli/atrium/reporting/reportables/Icon;ILch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/filters/ReportableFilter;Z)V
	public final fun component1 ()Lch/tutteli/atrium/reporting/reportables/Icon;
	public final fun component2 ()I
	public final fun component4 ()Lch/tutteli/atrium/reporting/filters/ReportableFilter;
	public final fun component5 ()Z
	public final fun copy (Lch/tutteli/atrium/reporting/reportables/Icon;ILch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/filters/ReportableFilter;Z)Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;
	public static synthetic fun copy$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Lch/tutteli/atrium/reporting/reportables/Icon;ILch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/filters/ReportableFilter;ZILjava/lang/Object;)Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getExplainsProof ()Z
	public final fun getIndentLevel ()I
	public final fun getPrefix ()Lch/tutteli/atrium/reporting/reportables/Icon;
	public final fun getReportableFilter ()Lch/tutteli/atrium/reporting/filters/ReportableFilter;
	public fun hashCode ()I
	public final fun includeInReporting (Lch/tutteli/atrium/reporting/reportables/Reportable;)Z
	public fun toString ()Ljava/lang/String;
	public fun transformChild (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
	public fun transformChildIncludingIndentationAndPrefix (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
	public fun transformGroup (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)Ljava/util/List;
	public fun transformRoot (Lch/tutteli/atrium/reporting/reportables/Reportable;Z)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObjectKt {
	public static final fun transformAndGetSingleColumnOfSingleNode (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Lch/tutteli/atrium/reporting/reportables/Reportable;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static final fun transformAndGetSingleNode (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Lch/tutteli/atrium/reporting/reportables/Reportable;)Lch/tutteli/atrium/reporting/prerendering/text/OutputNode;
}

public abstract interface class ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController {
	public abstract fun transformChild (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
	public abstract fun transformChildIncludingIndentationAndPrefix (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
	public abstract fun transformGroup (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;Ljava/util/List;I)Ljava/util/List;
	public abstract fun transformRoot (Lch/tutteli/atrium/reporting/reportables/Reportable;Z)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController$DefaultImpls {
	public static synthetic fun transformGroup$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;Ljava/util/List;IILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun transformRoot$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/Reportable;ZILjava/lang/Object;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControllerKt {
	public static final fun determineChildControlObject (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/reportables/Icon;I)Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;
	public static synthetic fun determineChildControlObject$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/reportables/Icon;IILjava/lang/Object;)Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;
	public static final fun transformGroup (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDescription;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun transformGroup (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableGroup;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static final fun transformGroup (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableWithDesignation;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;I)Ljava/util/List;
	public static synthetic fun transformGroup$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDescription;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun transformGroup$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableGroup;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/List;
	public static synthetic fun transformGroup$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableWithDesignation;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;IILjava/lang/Object;)Ljava/util/List;
	public static final fun transformSubProofGroup (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableGroup;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Lch/tutteli/atrium/reporting/reportables/Icon;)Ljava/util/List;
	public static final fun transformSubProofGroup (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableGroup;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/functions/Function1;)Ljava/util/List;
	public static synthetic fun transformSubProofGroup$default (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;Lch/tutteli/atrium/reporting/reportables/ReportableGroup;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;Ljava/util/List;Ljava/util/List;ILkotlin/jvm/functions/Function1;ILjava/lang/Object;)Ljava/util/List;
	public static final fun treeContainsAtLeastOneLeafProof (Lch/tutteli/atrium/reporting/reportables/ReportableGroup;)Z
}

public abstract interface class ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderer {
	public abstract fun canTransform (Lch/tutteli/atrium/reporting/reportables/Reportable;)Z
	public abstract fun transform (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public abstract class ch/tutteli/atrium/reporting/prerendering/text/TypedDesignatorPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TextDesignationPreRenderer {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public final fun canTransform (Lch/tutteli/atrium/reporting/reportables/Diagnostic;)Z
	public fun transform (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;ILjava/util/List;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
	protected abstract fun transformIt (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;ILjava/util/List;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public abstract class ch/tutteli/atrium/reporting/prerendering/text/TypedTextPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderer {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public final fun canTransform (Lch/tutteli/atrium/reporting/reportables/Reportable;)Z
	public final fun transform (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
	protected abstract fun transformIt (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/impl/DefaultInlineDesignatorPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TypedDesignatorPreRenderer {
	public fun <init> (Lch/tutteli/atrium/reporting/text/TextObjFormatter;)V
	public synthetic fun transformIt (Lch/tutteli/atrium/reporting/reportables/Diagnostic;Ljava/lang/Object;Ljava/util/List;Ljava/util/List;ILjava/util/List;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/impl/assertion/DefaultAssertionGroupTextPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderer {
	public fun <init> (Lch/tutteli/atrium/reporting/theming/text/TextIconStyler;)V
	public fun canTransform (Lch/tutteli/atrium/reporting/reportables/Reportable;)Z
	public fun transform (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/impl/assertion/DefaultDescriptiveAssertionTextPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TypedTextPreRenderer {
	public fun <init> ()V
	public synthetic fun transformIt (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/impl/assertion/DefaultExplanatoryAssertionGroupTextPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TextPreRenderer {
	public fun <init> ()V
	public fun canTransform (Lch/tutteli/atrium/reporting/reportables/Reportable;)Z
	public fun transform (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/impl/assertion/DefaultExplanatoryAssertionTextPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TypedTextPreRenderer {
	public fun <init> (Lch/tutteli/atrium/reporting/text/TextObjFormatter;)V
	public synthetic fun transformIt (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public final class ch/tutteli/atrium/reporting/prerendering/text/impl/assertion/DefaultRepresentationOnlyAssertionTextPreRenderer : ch/tutteli/atrium/reporting/prerendering/text/TypedTextPreRenderer {
	public fun <init> (Lch/tutteli/atrium/reporting/text/TextObjFormatter;)V
	public synthetic fun transformIt (Lch/tutteli/atrium/reporting/reportables/Reportable;Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderControlObject;)Ljava/util/List;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/Column : ch/tutteli/atrium/reporting/reportables/Diagnostic {
	public abstract fun getAlignment ()Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public abstract fun getInlineElement ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/DebugGroup : ch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDescription {
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/Description : ch/tutteli/atrium/reporting/reportables/TextElement {
	public abstract fun getDefault ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/reportables/Description$DefaultImpls {
	public static fun getDefault (Lch/tutteli/atrium/reporting/reportables/Description;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/Diagnostic : ch/tutteli/atrium/reporting/reportables/Reportable {
	public static final field Companion Lch/tutteli/atrium/reporting/reportables/Diagnostic$Companion;
}

public final class ch/tutteli/atrium/reporting/reportables/Diagnostic$Companion {
	public final fun column (Lch/tutteli/atrium/reporting/reportables/InlineElement;Lch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/reportables/Column;
	public final fun debugGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/DebugGroup;
	public final fun failureExplanationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/FailureExplanationGroup;
	public final fun group (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/lang/Object;Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/DiagnosticGroup;
	public final fun informationGroup (Lch/tutteli/atrium/reporting/reportables/InlineElement;Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/InformationGroup;
	public final fun inlineGroup (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/InlineGroup;
	public final fun inlineGroupOrSingleElement (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/InlineElement;
	public final fun proofExplanation (Lch/tutteli/atrium/creating/proofs/Proof;)Lch/tutteli/atrium/reporting/reportables/ProofExplanation;
	public final fun representation (Ljava/lang/Object;)Lch/tutteli/atrium/reporting/reportables/Representation;
	public final fun row (Lch/tutteli/atrium/reporting/reportables/Icon;ZLjava/util/List;)Lch/tutteli/atrium/reporting/reportables/Row;
	public final fun usageHintGroup (Ljava/util/List;)Lch/tutteli/atrium/reporting/reportables/UsageHintGroup;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/DiagnosticGroup : ch/tutteli/atrium/reporting/reportables/Diagnostic, ch/tutteli/atrium/reporting/reportables/ReportableGroup {
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDescription : ch/tutteli/atrium/reporting/reportables/DiagnosticGroup {
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/reportables/Diagnostic;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDesignation : ch/tutteli/atrium/reporting/reportables/DiagnosticGroup, ch/tutteli/atrium/reporting/reportables/ReportableGroupWithDesignation {
}

public final class ch/tutteli/atrium/reporting/reportables/ErrorMessages : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/TextElement {
	public static final field AT_LEAST_ONE_EXPECTATION_DEFINED Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
	public static final field DEFAULT_HINT_AT_LEAST_ONE_EXPECTATION_DEFINED Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
	public static final field DESCRIPTION_BASED_ON_SUBJECT Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
	public static final field FORGOT_DO_DEFINE_EXPECTATION Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
	public static final field REPRESENTATION_BASED_ON_SUBJECT_NOT_DEFINED Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/ErrorMessages;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/FailureExplanationGroup : ch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDescription {
}

public final class ch/tutteli/atrium/reporting/reportables/Icon : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/InlineElement {
	public static final field BANGBANG Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field BULB Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field DEBUG_INFO Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field EMPTY_STRING Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field FAILING_GROUP Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field FAILURE Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field FEATURE Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field FEATURE_BULLET_POINT Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field GROUPING_BULLET_POINT Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field INFORMATION_SOURCE Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field LIST_BULLET_POINT Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field PROOF_EXPLANATION_BULLET_POINT Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field ROOT_BULLET_POINT Lch/tutteli/atrium/reporting/reportables/Icon;
	public static final field SUCCESS Lch/tutteli/atrium/reporting/reportables/Icon;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/Icon;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/Icon;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/InformationGroup : ch/tutteli/atrium/reporting/reportables/DiagnosticGroupWithDescription {
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/InlineElement : ch/tutteli/atrium/reporting/reportables/Diagnostic {
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/InlineGroup : ch/tutteli/atrium/reporting/reportables/InlineElement {
	public abstract fun getInlineElements ()Ljava/util/List;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/ProofExplanation : ch/tutteli/atrium/reporting/reportables/DiagnosticGroup {
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/Reportable {
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/ReportableGroup : ch/tutteli/atrium/reporting/reportables/Reportable {
	public abstract fun getChildren ()Ljava/util/List;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/ReportableGroupWithDesignation : ch/tutteli/atrium/reporting/reportables/ReportableGroup, ch/tutteli/atrium/reporting/reportables/ReportableWithDesignation {
}

public final class ch/tutteli/atrium/reporting/reportables/ReportableKt {
	public static final fun requireOneChild (Lch/tutteli/atrium/reporting/reportables/ReportableGroup;)V
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/ReportableWithDesignation : ch/tutteli/atrium/reporting/reportables/Reportable {
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/reportables/Diagnostic;
	public abstract fun getRepresentation ()Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/ReportableWithInlineDesignation : ch/tutteli/atrium/reporting/reportables/ReportableWithDesignation {
	public abstract fun getDescription ()Lch/tutteli/atrium/reporting/reportables/InlineElement;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/Representation : ch/tutteli/atrium/reporting/reportables/InlineElement {
	public abstract fun getRepresentation ()Ljava/lang/Object;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/Row : ch/tutteli/atrium/reporting/reportables/Diagnostic {
	public abstract fun getColumns ()Ljava/util/List;
	public abstract fun getIcon ()Lch/tutteli/atrium/reporting/reportables/Icon;
	public abstract fun getIncludingBorder ()Z
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/TextElement : ch/tutteli/atrium/reporting/reportables/InlineElement {
	public abstract fun getString ()Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/reportables/UsageHintGroup : ch/tutteli/atrium/reporting/reportables/DiagnosticGroup {
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field NOT_TO_BE_AN_INSTANCE_OF Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static final field NOT_TO_BE_THE_INSTANCE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static final field NOT_TO_EQUAL Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static final field NOT_TO_EQUAL_ONE_OF Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static final field TO_BE_AN_INSTANCE_OF Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static final field TO_BE_THE_INSTANCE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static final field TO_EQUAL Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionAnyProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field NOT_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static final field NOT_TO_BE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static final field NOT_TO_HAVE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static final field TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static final field TO_BE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static final field TO_HAVE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static final field WAS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBasic;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field FAILURE_IS_EQUAL_INCLUDING_SCALE_BUT_NUMERICALLY_EQUAL Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
	public static final field IS_EQUAL_INCLUDING_SCALE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
	public static final field IS_NOT_EQUAL_INCLUDING_SCALE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
	public static final field IS_NOT_NUMERICALLY_EQUAL_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
	public static final field IS_NUMERICALLY_EQUAL_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionBigDecimalProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field AT_LEAST Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field AT_MOST Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field BLANK Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field Companion Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof$Companion;
	public static final field EMPTY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field EXACTLY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field NOT_FOUND Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field NOT_TO_CONTAIN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field NOT_TO_END_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field NOT_TO_MATCH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field NOT_TO_START_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field NUMBER_OF_MATCHES Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field STRING_MATCHING_REGEX Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field TO_CONTAIN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field TO_END_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field TO_MATCH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field TO_START_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static final field VALUE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCharSequenceProof$Companion {
	public final fun getIGNORING_CASE (Lch/tutteli/atrium/reporting/reportables/Description;)Lch/tutteli/atrium/reporting/reportables/Description;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCollectionProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field EMPTY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCollectionProof;
	public static final field SIZE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCollectionProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCollectionProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionCollectionProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field NOT_TO_BE_GREATER_THAN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static final field NOT_TO_BE_LESS_THAN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static final field TO_BE_EQUAL_COMPARING_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static final field TO_BE_GREATER_THAN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static final field TO_BE_GREATER_THAN_OR_EQUAL_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static final field TO_BE_LESS_THAN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static final field TO_BE_LESS_THAN_OR_EQUAL_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionComparableProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field DAY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field DAY_OF_WEEK Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field MONTH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field TO_BE_AFTER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field TO_BE_AFTER_OR_THE_SAME_POINT_IN_TIME_AS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field TO_BE_BEFORE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field TO_BE_BEFORE_OR_THE_SAME_POINT_IN_TIME_AS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field TO_BE_THE_SAME_DAY_AS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field TO_BE_THE_SAME_POINT_IN_TIME_AS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static final field YEAR Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDateTimeLikeProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDocumentationUtil : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field BECAUSE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDocumentationUtil;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDocumentationUtil;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionDocumentationUtil;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFloatingPointProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field FAILURE_DUE_TO_FLOATING_POINT_NUMBER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFloatingPointProof;
	public static final field TO_EQUAL_WITH_ERROR_TOLERANCE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFloatingPointProof;
	public static final field TO_EQUAL_WITH_ERROR_TOLERANCE_EXPLAINED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFloatingPointProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFloatingPointProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFloatingPointProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFunLikeProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field NO_EXCEPTION_OCCURRED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFunLikeProof;
	public static final field THREW Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFunLikeProof;
	public static final field THROWN_EXCEPTION_WHEN_CALLED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFunLikeProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFunLikeProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionFunLikeProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field ALL_ELEMENTS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field AN_ELEMENT_WHICH_EQUALS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field AN_ELEMENT_WHICH_NEEDS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field AT_LEAST Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field AT_MOST Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field A_NEXT_ELEMENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field DUPLICATED_BY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field DUPLICATE_ELEMENTS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field ELEMENT_NOT_FOUND Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field ELEMENT_WITH_INDEX Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field EXACTLY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field INDEX Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field INDEX_FROM_TO Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field IN_ANY_ORDER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field IN_ANY_ORDER_ONLY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field IN_ORDER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field IN_ORDER_ONLY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field IN_ORDER_ONLY_GROUPED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NEITHER_EMPTY_NOR_ELEMENT_FOUND Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NOT_TO_CONTAIN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NOT_TO_HAVE_ELEMENTS_OR_ALL Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NOT_TO_HAVE_ELEMENTS_OR_ANY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NOT_TO_HAVE_ELEMENTS_OR_NONE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NO_ELEMENTS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NUMBER_OF_ELEMENTS_FOUND Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field NUMBER_OF_SUCH_ELEMENTS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field SIZE_EXCEEDED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field TO_CONTAIN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field USE_NOT_TO_HAVE_ELEMENTS_OR_NONE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field WARNING_ADDITIONAL_ELEMENTS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field WARNING_MISMATCHES Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static final field WARNING_MISMATCHES_ADDITIONAL_ELEMENTS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionIterableLikeProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionListLikeProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field INDEX_OUT_OF_BOUNDS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionListLikeProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionListLikeProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionListLikeProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof : java/lang/Enum, ch/tutteli/atrium/reporting/translating/StringBasedTranslatable {
	public static final field ENTRY_WITH_KEY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field IN_ANY_ORDER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field IN_ANY_ORDER_ONLY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field IN_ORDER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field IN_ORDER_ONLY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field KEY_DOES_NOT_EXIST Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field NOT_TO_CONTAIN_KEY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field TO_CONTAIN Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field TO_CONTAIN_KEY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static final field WARNING_ADDITIONAL_ENTRIES Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getId ()Ljava/lang/String;
	public synthetic fun getName ()Ljava/lang/String;
	public fun getString ()Ljava/lang/String;
	public fun getValue ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionMapLikeProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionOptionalProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field EMPTY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionOptionalProof;
	public static final field IS_NOT_PRESENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionOptionalProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionOptionalProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionOptionalProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field ABSOLUTE_PATH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field AN_EMPTY_DIRECTORY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field A_DIRECTORY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field A_FILE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field A_SYMBOLIC_LINK Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field A_UNKNOWN_FILE_TYPE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field DIRECTORY_CONTAINS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field DOES_NOT_HAVE_PARENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field ENDS_NOT_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field ENDS_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field EXECUTABLE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field EXIST Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field EXTENSION Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_ACCESS_DENIED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_ACCESS_EXCEPTION Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_LINK_LOOP Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_NO_SUCH_FILE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_PARENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_PERMISSION_FILE_TYPE_HINT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FAILURE_DUE_TO_WRONG_FILE_TYPE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FILE_NAME Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field FILE_NAME_WITHOUT_EXTENSION Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HAS_SAME_BINARY_CONTENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HAS_SAME_TEXTUAL_CONTENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HINT_ACTUAL_ACL_PERMISSIONS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HINT_ACTUAL_POSIX_PERMISSIONS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HINT_CLOSEST_EXISTING_PARENT_DIRECTORY Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HINT_FOLLOWED_SYMBOLIC_LINK Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HINT_OWNER Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field HINT_OWNER_AND_GROUP Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field PARENT Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field READABLE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field RELATIVE_PATH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field STARTS_NOT_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field STARTS_WITH Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static final field WRITABLE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionPathProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field EXCEPTION Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof;
	public static final field IS_NOT_FAILURE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof;
	public static final field IS_NOT_SUCCESS Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof;
	public static final field VALUE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionResultProof;
}

public final class ch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof : java/lang/Enum, ch/tutteli/atrium/reporting/reportables/Description {
	public static final field CAUSE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static final field HAS_NO_CAUSE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static final field OCCURRED_EXCEPTION_CAUSE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static final field OCCURRED_EXCEPTION_MESSAGE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static final field OCCURRED_EXCEPTION_PROPERTIES Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static final field OCCURRED_EXCEPTION_STACKTRACE Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static final field OCCURRED_EXCEPTION_SUPPRESSED Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public fun getDefault ()Ljava/lang/String;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public fun getString ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
	public static fun values ()[Lch/tutteli/atrium/reporting/reportables/descriptions/DescriptionThrowableProof;
}

public final class ch/tutteli/atrium/reporting/reportables/impl/DefaultRepresentation : ch/tutteli/atrium/reporting/reportables/Representation {
	public fun <init> (Ljava/lang/Object;)V
	public fun getRepresentation ()Ljava/lang/Object;
}

public final class ch/tutteli/atrium/reporting/reportables/impl/SuffixedDescription : ch/tutteli/atrium/reporting/reportables/Description {
	public fun <init> (Lch/tutteli/atrium/reporting/reportables/Description;Ljava/lang/String;)V
	public fun getDefault ()Ljava/lang/String;
	public fun getString ()Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/text/BulletPointProvider {
	public abstract fun getBulletPoints ()Ljava/util/Map;
}

public abstract interface class ch/tutteli/atrium/reporting/text/TextAssertionFormatter : ch/tutteli/atrium/reporting/AssertionFormatter {
}

public final class ch/tutteli/atrium/reporting/text/TextAssertionFormatter$DefaultImpls {
	public static fun format (Lch/tutteli/atrium/reporting/text/TextAssertionFormatter;Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public abstract interface class ch/tutteli/atrium/reporting/text/TextAssertionPairFormatter : ch/tutteli/atrium/reporting/AssertionPairFormatter {
	public static final field Companion Lch/tutteli/atrium/reporting/text/TextAssertionPairFormatter$Companion;
}

public final class ch/tutteli/atrium/reporting/text/TextAssertionPairFormatter$Companion {
	public final fun newNextLine (Lch/tutteli/atrium/reporting/ObjectFormatter;)Lch/tutteli/atrium/reporting/text/TextAssertionPairFormatter;
	public final fun newNextLine (Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/text/TextAssertionPairFormatter;
	public final fun newSameLine (Lch/tutteli/atrium/reporting/ObjectFormatter;)Lch/tutteli/atrium/reporting/text/TextAssertionPairFormatter;
	public final fun newSameLine (Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)Lch/tutteli/atrium/reporting/text/TextAssertionPairFormatter;
}

public final class ch/tutteli/atrium/reporting/text/TextAssertionPairFormatter$DefaultImpls {
	public static fun format (Lch/tutteli/atrium/reporting/text/TextAssertionPairFormatter;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V
}

public abstract interface class ch/tutteli/atrium/reporting/text/TextMethodCallFormatter : ch/tutteli/atrium/reporting/MethodCallFormatter {
}

public abstract interface class ch/tutteli/atrium/reporting/text/TextObjFormatter {
	public abstract fun format (Ljava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public abstract interface class ch/tutteli/atrium/reporting/text/TextObjectFormatter : ch/tutteli/atrium/reporting/ObjectFormatter {
}

public abstract interface class ch/tutteli/atrium/reporting/text/TextReporter : ch/tutteli/atrium/reporting/Reporter {
	public abstract fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)Ljava/lang/Void;
}

public final class ch/tutteli/atrium/reporting/text/TextReporter$DefaultImpls {
	public static fun createReport (Lch/tutteli/atrium/reporting/text/TextReporter;Lch/tutteli/atrium/reporting/reportables/Reportable;)Ljava/lang/StringBuilder;
	public static fun format (Lch/tutteli/atrium/reporting/text/TextReporter;Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)Ljava/lang/Void;
}

public final class ch/tutteli/atrium/reporting/text/UsingDefaultBulletPoints : ch/tutteli/atrium/reporting/text/BulletPointProvider {
	public static final field INSTANCE Lch/tutteli/atrium/reporting/text/UsingDefaultBulletPoints;
	public fun getBulletPoints ()Ljava/util/Map;
}

public abstract class ch/tutteli/atrium/reporting/text/impl/AbstractTextObjectFormatter : ch/tutteli/atrium/reporting/text/impl/TextObjectFormatterCommon {
	public fun <init> ()V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translator;)V
	public final fun format (Ljava/lang/Object;)Ljava/lang/String;
	protected final fun format (Lkotlin/reflect/KClass;)Ljava/lang/String;
	protected fun identityHash (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/text/impl/DefaultTextMethodCallFormatter : ch/tutteli/atrium/reporting/text/TextMethodCallFormatter {
	public static final field INSTANCE Lch/tutteli/atrium/reporting/text/impl/DefaultTextMethodCallFormatter;
	public fun formatArgument (Ljava/lang/Object;)Ljava/lang/String;
	public fun formatCall (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/text/impl/DefaultTextObjFormatter : ch/tutteli/atrium/reporting/text/TextObjFormatter {
	public static final field Companion Lch/tutteli/atrium/reporting/text/impl/DefaultTextObjFormatter$Companion;
	public static final field LIMIT I
	public fun <init> (Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;)V
	public fun format (Ljava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public final class ch/tutteli/atrium/reporting/text/impl/DefaultTextObjFormatter$Companion {
}

public final class ch/tutteli/atrium/reporting/text/impl/DefaultTextObjectFormatter : ch/tutteli/atrium/reporting/text/impl/AbstractTextObjectFormatter, ch/tutteli/atrium/reporting/text/TextObjectFormatter {
	public fun <init> ()V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translator;)V
}

public final class ch/tutteli/atrium/reporting/text/impl/DefaultTextReporter : ch/tutteli/atrium/reporting/text/TextReporter {
	public fun <init> (Lch/tutteli/atrium/reporting/prerendering/text/TextPreRenderController;)V
	public fun createReport (Lch/tutteli/atrium/reporting/reportables/Reportable;)Ljava/lang/StringBuilder;
	public fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)Ljava/lang/Void;
	public synthetic fun format (Lch/tutteli/atrium/assertions/Assertion;Ljava/lang/StringBuilder;)V
}

public abstract class ch/tutteli/atrium/reporting/text/impl/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter : ch/tutteli/atrium/reporting/text/impl/SingleAssertionGroupTypeFormatter {
	public fun <init> (Lkotlin/reflect/KClass;Lch/tutteli/atrium/reporting/AssertionFormatterController;)V
	protected final fun formatGroupAssertions (Lkotlin/jvm/functions/Function2;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public abstract class ch/tutteli/atrium/reporting/text/impl/SingleAssertionGroupTypeFormatter : ch/tutteli/atrium/reporting/AssertionFormatter {
	public fun <init> (Lkotlin/reflect/KClass;)V
	public final fun canFormat (Lch/tutteli/atrium/assertions/Assertion;)Z
	public fun format (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
	public final fun formatGroup (Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function2;)V
	protected abstract fun formatGroupAssertions (Lkotlin/jvm/functions/Function2;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
	protected abstract fun formatGroupHeaderAndGetChildParameterObject (Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun formatNonGroup (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Ljava/lang/Void;
	public synthetic fun formatNonGroup (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public abstract interface class ch/tutteli/atrium/reporting/text/impl/TextAssertionFormatterFactory {
	public static final field Companion Lch/tutteli/atrium/reporting/text/impl/TextAssertionFormatterFactory$Companion;
	public abstract fun build (Lch/tutteli/atrium/reporting/AssertionFormatterController;)Lch/tutteli/atrium/reporting/text/TextAssertionFormatter;
}

public final class ch/tutteli/atrium/reporting/text/impl/TextAssertionFormatterFactory$Companion {
	public final fun invoke (Lkotlin/jvm/functions/Function1;)Lch/tutteli/atrium/reporting/text/impl/TextAssertionFormatterFactory;
}

public final class ch/tutteli/atrium/reporting/text/impl/TextExplanatoryAssertionGroupFormatter : ch/tutteli/atrium/reporting/text/impl/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter, ch/tutteli/atrium/reporting/text/TextAssertionFormatter {
	public fun <init> (Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;)V
}

public final class ch/tutteli/atrium/reporting/text/impl/TextFallbackAssertionFormatter : ch/tutteli/atrium/reporting/AssertionFormatter, ch/tutteli/atrium/reporting/text/TextAssertionFormatter {
	public fun <init> (Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/reporting/ObjectFormatter;)V
	public fun canFormat (Lch/tutteli/atrium/assertions/Assertion;)Z
	public fun format (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
	public fun formatGroup (Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lkotlin/jvm/functions/Function2;)V
	public fun formatNonGroup (Lch/tutteli/atrium/assertions/Assertion;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public final class ch/tutteli/atrium/reporting/text/impl/TextFeatureAssertionGroupFormatter : ch/tutteli/atrium/reporting/text/impl/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter, ch/tutteli/atrium/reporting/text/TextAssertionFormatter {
	public fun <init> (Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V
}

public final class ch/tutteli/atrium/reporting/text/impl/TextGroupingAssertionGroupFormatter : ch/tutteli/atrium/reporting/text/impl/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter, ch/tutteli/atrium/reporting/text/TextAssertionFormatter {
	public fun <init> (Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V
}

public final class ch/tutteli/atrium/reporting/text/impl/TextListAssertionGroupFormatter : ch/tutteli/atrium/reporting/text/impl/TextListBasedAssertionGroupFormatter {
	public fun <init> (Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V
}

public abstract class ch/tutteli/atrium/reporting/text/impl/TextListBasedAssertionGroupFormatter : ch/tutteli/atrium/reporting/text/impl/NoSpecialChildFormattingSingleAssertionGroupTypeFormatter, ch/tutteli/atrium/reporting/text/TextAssertionFormatter {
	public fun <init> (Ljava/lang/String;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lkotlin/reflect/KClass;)V
	protected fun formatGroupHeaderAndGetChildParameterObject (Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
}

public final class ch/tutteli/atrium/reporting/text/impl/TextNextLineAssertionPairFormatter : ch/tutteli/atrium/reporting/AssertionPairFormatter, ch/tutteli/atrium/reporting/text/TextAssertionPairFormatter {
	public fun <init> (Lch/tutteli/atrium/reporting/ObjectFormatter;)V
	public fun <init> (Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)V
	public fun format (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V
	public fun format (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Ljava/lang/String;Ljava/lang/Object;)V
	public fun formatGroupHeader (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public abstract class ch/tutteli/atrium/reporting/text/impl/TextObjectFormatterCommon : ch/tutteli/atrium/reporting/text/TextObjectFormatter {
	public static final field Companion Lch/tutteli/atrium/reporting/text/impl/TextObjectFormatterCommon$Companion;
	public fun <init> ()V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translator;)V
	public fun format (Ljava/lang/Object;)Ljava/lang/String;
	protected abstract fun format (Lkotlin/reflect/KClass;)Ljava/lang/String;
	protected abstract fun identityHash (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/text/impl/TextObjectFormatterCommon$Companion {
}

public final class ch/tutteli/atrium/reporting/text/impl/TextPrefixBasedAssertionGroupFormatter {
	public fun <init> (Ljava/lang/String;)V
	public final fun formatAfterAppendLnEtc (Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
	public final fun formatWithGroupName (Lch/tutteli/atrium/reporting/AssertionPairFormatter;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;
}

public final class ch/tutteli/atrium/reporting/text/impl/TextSameLineAssertionPairFormatter : ch/tutteli/atrium/reporting/AssertionPairFormatter, ch/tutteli/atrium/reporting/text/TextAssertionPairFormatter {
	public fun <init> (Lch/tutteli/atrium/reporting/ObjectFormatter;)V
	public fun <init> (Lch/tutteli/atrium/reporting/ObjectFormatter;Lch/tutteli/atrium/reporting/translating/Translator;)V
	public fun format (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V
	public fun format (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Ljava/lang/String;Ljava/lang/Object;)V
	public fun formatGroupHeader (Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;Lch/tutteli/atrium/assertions/AssertionGroup;Lch/tutteli/atrium/reporting/AssertionFormatterParameterObject;)V
}

public final class ch/tutteli/atrium/reporting/text/impl/TextSummaryAssertionGroupFormatter : ch/tutteli/atrium/reporting/text/impl/SingleAssertionGroupTypeFormatter, ch/tutteli/atrium/reporting/text/TextAssertionFormatter {
	public fun <init> (Ljava/util/Map;Lch/tutteli/atrium/reporting/AssertionFormatterController;Lch/tutteli/atrium/reporting/AssertionPairFormatter;)V
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator {
	public abstract fun calculate (Ljava/lang/String;)I
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/NotYetStyledString {
	public static final field Companion Lch/tutteli/atrium/reporting/theming/text/NotYetStyledString$Companion;
	public abstract fun getMonospaceLength ()I
	public abstract fun getUnstyled ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/theming/text/NotYetStyledString$Companion {
	public final fun create (Ljava/lang/String;I)Lch/tutteli/atrium/reporting/theming/text/NotYetStyledString;
	public static synthetic fun create$default (Lch/tutteli/atrium/reporting/theming/text/NotYetStyledString$Companion;Ljava/lang/String;IILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/NotYetStyledString;
}

public final class ch/tutteli/atrium/reporting/theming/text/Style : java/lang/Enum {
	public static final field DEBUG_INFO Lch/tutteli/atrium/reporting/theming/text/Style;
	public static final field FAILURE Lch/tutteli/atrium/reporting/theming/text/Style;
	public static final field FEATURE Lch/tutteli/atrium/reporting/theming/text/Style;
	public static final field INFORMATION_SOURCE Lch/tutteli/atrium/reporting/theming/text/Style;
	public static final field SUCCESS Lch/tutteli/atrium/reporting/theming/text/Style;
	public static final field USAGE_HINT Lch/tutteli/atrium/reporting/theming/text/Style;
	public static fun getEntries ()Lkotlin/enums/EnumEntries;
	public final fun getStyleId ()Ljava/lang/String;
	public static fun valueOf (Ljava/lang/String;)Lch/tutteli/atrium/reporting/theming/text/Style;
	public static fun values ()[Lch/tutteli/atrium/reporting/theming/text/Style;
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/StyledString {
	public static final field Companion Lch/tutteli/atrium/reporting/theming/text/StyledString$Companion;
	public abstract fun getHorizontalAlignment ()Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public abstract fun getMaxLineMonospaceLength ()I
	public abstract fun getMaybeStyled ()Lch/tutteli/atrium/core/Option;
	public abstract fun getMonospaceLength ()I
	public abstract fun getNoLineBreak ()Z
	public abstract fun getString ()Ljava/lang/String;
	public abstract fun getUnstyled ()Ljava/lang/String;
	public abstract fun padString (I)Ljava/lang/String;
	public abstract fun withHorizontalAlignment (Lch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public abstract fun withoutLineBreaks ()Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public final class ch/tutteli/atrium/reporting/theming/text/StyledString$Companion {
	public final fun create (Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Lch/tutteli/atrium/core/Option;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun create$default (Lch/tutteli/atrium/reporting/theming/text/StyledString$Companion;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Lch/tutteli/atrium/core/Option;ZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public final fun createWithPredefinedMonospaceLength (Ljava/lang/String;Lch/tutteli/atrium/core/Option;IIZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun createWithPredefinedMonospaceLength$default (Lch/tutteli/atrium/reporting/theming/text/StyledString$Companion;Ljava/lang/String;Lch/tutteli/atrium/core/Option;IIZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public final fun getCOLON_SEPARATOR ()Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public final fun getEMPTY_STRING ()Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public final class ch/tutteli/atrium/reporting/theming/text/StyledString$DefaultImpls {
	public static fun padString (Lch/tutteli/atrium/reporting/theming/text/StyledString;I)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/theming/text/StyledStringKt {
	public static final fun noStyle (Ljava/lang/String;IIZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static final fun noStyle (Ljava/lang/String;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun noStyle$default (Ljava/lang/String;IIZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun noStyle$default (Ljava/lang/String;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;ZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static final fun padMonospace (Lch/tutteli/atrium/reporting/theming/text/StyledString;I)Ljava/lang/String;
	public static final fun replaceWrap (Lch/tutteli/atrium/reporting/theming/text/StyledString;Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/TextIconStyler {
	public abstract fun style (Lch/tutteli/atrium/reporting/reportables/Icon;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/TextStyler {
	public abstract fun style (Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Ljava/lang/String;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public abstract fun styleWithPredefinedMonospaceLength (Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public final class ch/tutteli/atrium/reporting/theming/text/TextStyler$DefaultImpls {
	public static synthetic fun style$default (Lch/tutteli/atrium/reporting/theming/text/TextStyler;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Ljava/lang/String;ZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun styleWithPredefinedMonospaceLength$default (Lch/tutteli/atrium/reporting/theming/text/TextStyler;Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;ZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public final class ch/tutteli/atrium/reporting/theming/text/TextStylerKt {
	public static final fun style (Lch/tutteli/atrium/reporting/theming/text/TextStyler;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Lch/tutteli/atrium/core/Option;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static final fun style (Lch/tutteli/atrium/reporting/theming/text/TextStyler;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Lch/tutteli/atrium/reporting/theming/text/Style;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun style$default (Lch/tutteli/atrium/reporting/theming/text/TextStyler;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Lch/tutteli/atrium/core/Option;ZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public static synthetic fun style$default (Lch/tutteli/atrium/reporting/theming/text/TextStyler;Lch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator;Ljava/lang/String;Lch/tutteli/atrium/reporting/theming/text/Style;ZLch/tutteli/atrium/reporting/HorizontalAlignment;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/TextThemeProvider {
	public abstract fun getSupportsAnsiColours ()Z
	public abstract fun render (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/theming/text/Utf8SupportDeterminer {
	public abstract fun isSupported ()Z
}

public final class ch/tutteli/atrium/reporting/theming/text/impl/MarkdownTextIconStyler : ch/tutteli/atrium/reporting/theming/text/TextIconStyler {
	public fun <init> ()V
	public fun style (Lch/tutteli/atrium/reporting/reportables/Icon;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public abstract class ch/tutteli/atrium/reporting/theming/text/impl/MonospaceCalculatorBasedStyledString : ch/tutteli/atrium/reporting/theming/text/StyledString {
	public fun <init> (Ljava/lang/String;Lch/tutteli/atrium/core/Option;ZLch/tutteli/atrium/reporting/HorizontalAlignment;)V
	public fun getHorizontalAlignment ()Lch/tutteli/atrium/reporting/HorizontalAlignment;
	public fun getMaybeStyled ()Lch/tutteli/atrium/core/Option;
	public fun getNoLineBreak ()Z
	public final fun getString ()Ljava/lang/String;
	public fun getUnstyled ()Ljava/lang/String;
	public fun padString (I)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun withHorizontalAlignment (Lch/tutteli/atrium/reporting/HorizontalAlignment;)Lch/tutteli/atrium/reporting/theming/text/StyledString;
	public final fun withoutLineBreaks ()Lch/tutteli/atrium/reporting/theming/text/StyledString;
}

public final class ch/tutteli/atrium/reporting/theming/text/impl/MonospaceLengthPrecalculated : ch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator {
	public fun <init> ()V
	public fun calculate (Ljava/lang/String;)I
}

public final class ch/tutteli/atrium/reporting/theming/text/impl/StringLengthMonospaceLengthCalculator : ch/tutteli/atrium/reporting/theming/text/MonospaceLengthCalculator {
	public static final field INSTANCE Lch/tutteli/atrium/reporting/theming/text/impl/StringLengthMonospaceLengthCalculator;
	public fun calculate (Ljava/lang/String;)I
}

public abstract class ch/tutteli/atrium/reporting/translating/ArgumentsSupportingTranslator : ch/tutteli/atrium/reporting/translating/Translator {
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)V
	protected final fun getFallbackLocales ()Ljava/util/List;
	protected final fun getPrimaryLocale ()Lch/tutteli/atrium/reporting/translating/Locale;
	public final fun translate (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;
	protected abstract fun translateWithoutArgs (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/Locale {
	public fun <init> (Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Ljava/lang/String;
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lch/tutteli/atrium/reporting/translating/Locale;
	public static synthetic fun copy$default (Lch/tutteli/atrium/reporting/translating/Locale;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/translating/Locale;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getCountry ()Ljava/lang/String;
	public final fun getLanguage ()Ljava/lang/String;
	public final fun getScript ()Ljava/lang/String;
	public final fun getVariant ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/LocaleKt {
	public static final fun getDefaultLocale ()Lch/tutteli/atrium/reporting/translating/Locale;
	public static final fun toJavaLocale (Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/util/Locale;
}

public abstract interface class ch/tutteli/atrium/reporting/translating/LocaleOrderDecider {
	public abstract fun determineOrder (Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)Lkotlin/sequences/Sequence;
}

public abstract interface class ch/tutteli/atrium/reporting/translating/LocaleProvider {
	public abstract fun getFallbackLocales ()Ljava/util/List;
	public abstract fun getPrimaryLocale ()Lch/tutteli/atrium/reporting/translating/Locale;
}

public abstract class ch/tutteli/atrium/reporting/translating/PropertiesBasedTranslationSupplier : ch/tutteli/atrium/reporting/translating/TranslationSupplier {
	public fun <init> ()V
	protected final fun getFileNameFor (Ljava/lang/String;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;
	protected final fun getOrLoadProperties (Ljava/lang/Object;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Ljava/util/Map;
}

public final class ch/tutteli/atrium/reporting/translating/PropertiesPerEntityAndLocaleTranslationSupplier : ch/tutteli/atrium/reporting/translating/PropertiesBasedTranslationSupplier {
	public fun <init> ()V
	public fun get (Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/PropertiesPerLocaleTranslationSupplier : ch/tutteli/atrium/reporting/translating/PropertiesBasedTranslationSupplier {
	public fun <init> ()V
	public fun get (Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/translating/StringBasedTranslatable : ch/tutteli/atrium/reporting/translating/Translatable {
	public abstract fun getDefault ()Ljava/lang/String;
	public abstract fun getValue ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/StringBasedTranslatable$DefaultImpls {
	public static fun getDefault (Lch/tutteli/atrium/reporting/translating/StringBasedTranslatable;)Ljava/lang/String;
	public static fun getId (Lch/tutteli/atrium/reporting/translating/StringBasedTranslatable;)Ljava/lang/String;
	public static fun getString (Lch/tutteli/atrium/reporting/translating/StringBasedTranslatable;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/translating/Translatable : ch/tutteli/atrium/reporting/reportables/TextElement {
	public static final field Companion Lch/tutteli/atrium/reporting/translating/Translatable$Companion;
	public static final field ID_SEPARATOR Ljava/lang/String;
	public abstract fun getDefault ()Ljava/lang/String;
	public abstract fun getId ()Ljava/lang/String;
	public abstract fun getName ()Ljava/lang/String;
	public abstract fun getString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/Translatable$Companion {
	public static final field ID_SEPARATOR Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/Translatable$DefaultImpls {
	public static fun getId (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;
	public static fun getString (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/TranslatableWithArgs : ch/tutteli/atrium/reporting/translating/Translatable {
	public static final field Companion Lch/tutteli/atrium/reporting/translating/TranslatableWithArgs$Companion;
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;)V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/lang/Object;)V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;)V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/util/List;)V
	public final fun component1 ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public final fun component2 ()Ljava/util/List;
	public final fun copy (Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/util/List;)Lch/tutteli/atrium/reporting/translating/TranslatableWithArgs;
	public static synthetic fun copy$default (Lch/tutteli/atrium/reporting/translating/TranslatableWithArgs;Lch/tutteli/atrium/reporting/translating/Translatable;Ljava/util/List;ILjava/lang/Object;)Lch/tutteli/atrium/reporting/translating/TranslatableWithArgs;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getArguments ()Ljava/util/List;
	public fun getDefault ()Ljava/lang/String;
	public fun getId ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getString ()Ljava/lang/String;
	public final fun getTranslatable ()Lch/tutteli/atrium/reporting/translating/Translatable;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/TranslatableWithArgs$Companion {
}

public abstract interface class ch/tutteli/atrium/reporting/translating/TranslationSupplier {
	public abstract fun get (Lch/tutteli/atrium/reporting/translating/Translatable;Lch/tutteli/atrium/reporting/translating/Locale;)Ljava/lang/String;
}

public abstract interface class ch/tutteli/atrium/reporting/translating/Translator {
	public abstract fun translate (Lch/tutteli/atrium/reporting/translating/Translatable;)Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/Untranslatable : ch/tutteli/atrium/reporting/translating/Translatable {
	public static final field Companion Lch/tutteli/atrium/reporting/translating/Untranslatable$Companion;
	public fun <init> (Ljava/lang/String;)V
	public fun getDefault ()Ljava/lang/String;
	public fun getId ()Ljava/lang/String;
	public fun getName ()Ljava/lang/String;
	public fun getString ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class ch/tutteli/atrium/reporting/translating/Untranslatable$Companion {
	public final fun getEMPTY ()Lch/tutteli/atrium/reporting/translating/Untranslatable;
}

public final class ch/tutteli/atrium/reporting/translating/UseDefaultLocaleAsPrimary : ch/tutteli/atrium/reporting/translating/LocaleProvider {
	public static final field INSTANCE Lch/tutteli/atrium/reporting/translating/UseDefaultLocaleAsPrimary;
	public fun getFallbackLocales ()Ljava/util/List;
	public fun getPrimaryLocale ()Lch/tutteli/atrium/reporting/translating/Locale;
}

public final class ch/tutteli/atrium/reporting/translating/UsingDefaultTranslator : ch/tutteli/atrium/reporting/translating/ArgumentsSupportingTranslator {
	public fun <init> ()V
	public fun <init> (Lch/tutteli/atrium/reporting/translating/Locale;)V
	public synthetic fun <init> (Lch/tutteli/atrium/reporting/translating/Locale;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
}

public final class ch/tutteli/atrium/reporting/translating/impl/ResourceBundleInspiredLocaleOrderDecider : ch/tutteli/atrium/reporting/translating/LocaleOrderDecider {
	public static final field INSTANCE Lch/tutteli/atrium/reporting/translating/impl/ResourceBundleInspiredLocaleOrderDecider;
	public fun determineOrder (Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)Lkotlin/sequences/Sequence;
}

public final class ch/tutteli/atrium/reporting/translating/impl/TranslationSupplierBasedTranslator : ch/tutteli/atrium/reporting/translating/ArgumentsSupportingTranslator {
	public fun <init> (Lch/tutteli/atrium/reporting/translating/TranslationSupplier;Lch/tutteli/atrium/reporting/translating/LocaleOrderDecider;Lch/tutteli/atrium/reporting/translating/Locale;Ljava/util/List;)V
}

